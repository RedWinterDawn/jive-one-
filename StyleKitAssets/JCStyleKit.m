//
//  JCStyleKit.m
//  JC
//
//  Created by Doug Leonard on 6/23/14.
//  Copyright (c) 2014 Jive. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "JCStyleKit.h"


@implementation JCStyleKit

#pragma mark Cache

static UIColor* _unSelectedButtonColor = nil;
static UIColor* _selectedButtonColor = nil;
static UIColor* _deleteColor = nil;
static UIColor* _loginColor = nil;

static UIImage* _imageOfMoreLogin = nil;
static UIImage* _imageOfDefaultAvatarLogin = nil;
static UIImage* _imageOfVoicemailLogin = nil;
static UIImage* _imageOfContactsIcon = nil;
static UIImage* _imageOfMessageIcon = nil;
static UIImage* _imageOfMoreIcon = nil;
static UIImage* _imageOfSearchIcon = nil;
static UIImage* _imageOfStarIcon = nil;
static UIImage* _imageOfTypingIcon = nil;
static UIImage* _imageOfUndoIcon = nil;
static UIImage* _imageOfDefaultAvatarIcon = nil;
static UIImage* _imageOfVoicemailIcon = nil;
static UIImage* _imageOfLogoutIcon = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _unSelectedButtonColor = [UIColor colorWithRed: 0.282 green: 0.298 blue: 0.333 alpha: 1];
    _selectedButtonColor = [UIColor colorWithRed: 0.275 green: 0.396 blue: 0.843 alpha: 1];
    _deleteColor = [UIColor colorWithRed: 0.949 green: 0.302 blue: 0.216 alpha: 1];
    _loginColor = [UIColor colorWithRed: 0.982 green: 0.985 blue: 1 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)unSelectedButtonColor { return _unSelectedButtonColor; }
+ (UIColor*)selectedButtonColor { return _selectedButtonColor; }
+ (UIColor*)deleteColor { return _deleteColor; }
+ (UIColor*)loginColor { return _loginColor; }

#pragma mark Drawing Methods

+ (void)drawMoreLogin;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(27.29, 42.79)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 57.07) controlPoint1: CGPointMake(31.24, 46.73) controlPoint2: CGPointMake(31.24, 53.13)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 57.07) controlPoint1: CGPointMake(23.35, 61.02) controlPoint2: CGPointMake(16.95, 61.02)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 42.79) controlPoint1: CGPointMake(9.06, 53.13) controlPoint2: CGPointMake(9.06, 46.73)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 42.79) controlPoint1: CGPointMake(16.95, 38.84) controlPoint2: CGPointMake(23.35, 38.84)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(57.09, 42.89)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 57.17) controlPoint1: CGPointMake(61.04, 46.83) controlPoint2: CGPointMake(61.04, 53.23)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 57.17) controlPoint1: CGPointMake(53.15, 61.12) controlPoint2: CGPointMake(46.75, 61.12)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 42.89) controlPoint1: CGPointMake(38.86, 53.23) controlPoint2: CGPointMake(38.86, 46.83)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 42.89) controlPoint1: CGPointMake(46.75, 38.94) controlPoint2: CGPointMake(53.15, 38.94)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(86.99, 42.79)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 57.07) controlPoint1: CGPointMake(90.94, 46.73) controlPoint2: CGPointMake(90.94, 53.13)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 57.07) controlPoint1: CGPointMake(83.05, 61.02) controlPoint2: CGPointMake(76.65, 61.02)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 42.79) controlPoint1: CGPointMake(68.76, 53.13) controlPoint2: CGPointMake(68.76, 46.73)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 42.79) controlPoint1: CGPointMake(76.65, 38.84) controlPoint2: CGPointMake(83.05, 38.84)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawDefaultAvatarLogin;
{

    //// defaultAvatarBezier Drawing
    UIBezierPath* defaultAvatarBezierPath = UIBezierPath.bezierPath;
    [defaultAvatarBezierPath moveToPoint: CGPointMake(83.35, 75.21)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(80.95, 69.61) controlPoint1: CGPointMake(83.45, 73.11) controlPoint2: CGPointMake(82.25, 71.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(73.55, 63.81) controlPoint1: CGPointMake(78.85, 67.21) controlPoint2: CGPointMake(76.25, 65.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(61.25, 58.41) controlPoint1: CGPointMake(69.65, 61.61) controlPoint2: CGPointMake(65.55, 59.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.85, 57.01) controlPoint1: CGPointMake(60.55, 58.21) controlPoint2: CGPointMake(60.25, 57.61)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.05, 50.61) controlPoint1: CGPointMake(58.75, 55.11) controlPoint2: CGPointMake(58.55, 52.71)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.55, 49.21) controlPoint1: CGPointMake(59.15, 50.11) controlPoint2: CGPointMake(59.25, 49.61)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(68.15, 32.21) controlPoint1: CGPointMake(63.95, 44.51) controlPoint2: CGPointMake(67.05, 38.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(66.95, 19.91) controlPoint1: CGPointMake(68.85, 28.11) controlPoint2: CGPointMake(68.55, 23.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(60.65, 12.21) controlPoint1: CGPointMake(65.65, 16.81) controlPoint2: CGPointMake(63.45, 14.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(47.85, 9.51) controlPoint1: CGPointMake(56.95, 9.81) controlPoint2: CGPointMake(52.35, 8.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(40.15, 12.31) controlPoint1: CGPointMake(45.15, 9.81) controlPoint2: CGPointMake(42.45, 10.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(33.95, 20.01) controlPoint1: CGPointMake(37.35, 14.11) controlPoint2: CGPointMake(35.25, 16.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(33.05, 33.51) controlPoint1: CGPointMake(32.25, 24.31) controlPoint2: CGPointMake(32.15, 29.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(41.25, 49.41) controlPoint1: CGPointMake(34.25, 39.41) controlPoint2: CGPointMake(37.15, 45.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(39.55, 58.01) controlPoint1: CGPointMake(42.55, 52.21) controlPoint2: CGPointMake(41.85, 55.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(38.05, 58.71) controlPoint1: CGPointMake(39.15, 58.41) controlPoint2: CGPointMake(38.55, 58.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(26.25, 64.41) controlPoint1: CGPointMake(33.95, 60.21) controlPoint2: CGPointMake(29.95, 62.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(19.85, 69.51) controlPoint1: CGPointMake(23.95, 65.81) controlPoint2: CGPointMake(21.75, 67.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(17.55, 73.41) controlPoint1: CGPointMake(18.85, 70.61) controlPoint2: CGPointMake(17.95, 71.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(17.25, 77.21) controlPoint1: CGPointMake(17.15, 74.61) controlPoint2: CGPointMake(17.35, 76.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(18.55, 81.31) controlPoint1: CGPointMake(17.15, 78.71) controlPoint2: CGPointMake(17.65, 80.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(23.75, 84.91) controlPoint1: CGPointMake(19.85, 83.01) controlPoint2: CGPointMake(21.85, 84.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(34.05, 87.41) controlPoint1: CGPointMake(27.05, 86.21) controlPoint2: CGPointMake(30.55, 86.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(49.95, 88.31) controlPoint1: CGPointMake(39.35, 88.11) controlPoint2: CGPointMake(44.65, 88.31)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(68.55, 87.11) controlPoint1: CGPointMake(56.15, 88.31) controlPoint2: CGPointMake(62.35, 88.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(78.35, 84.21) controlPoint1: CGPointMake(71.95, 86.51) controlPoint2: CGPointMake(75.25, 85.71)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(82.85, 79.81) controlPoint1: CGPointMake(80.25, 83.21) controlPoint2: CGPointMake(82.05, 81.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(83.35, 75.21) controlPoint1: CGPointMake(83.55, 78.31) controlPoint2: CGPointMake(83.35, 76.81)];
    [defaultAvatarBezierPath closePath];
    defaultAvatarBezierPath.miterLimit = 4;

    [JCStyleKit.loginColor setFill];
    [defaultAvatarBezierPath fill];
}

+ (void)drawVoicemailLogin;
{

    //// voicemailBezier Drawing
    UIBezierPath* voicemailBezierPath = UIBezierPath.bezierPath;
    [voicemailBezierPath moveToPoint: CGPointMake(72.82, 30.15)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(55.52, 48.15) controlPoint1: CGPointMake(63.22, 30.15) controlPoint2: CGPointMake(55.52, 38.55)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(57.32, 56.65) controlPoint1: CGPointMake(55.52, 50.95) controlPoint2: CGPointMake(56.22, 52.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(42.92, 56.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(44.72, 48.15) controlPoint1: CGPointMake(44.12, 52.65) controlPoint2: CGPointMake(44.72, 50.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 30.45) controlPoint1: CGPointMake(44.72, 38.55) controlPoint2: CGPointMake(36.92, 30.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(10.12, 47.65) controlPoint1: CGPointMake(17.92, 30.45) controlPoint2: CGPointMake(10.12, 38.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(28.12, 64.85) controlPoint1: CGPointMake(10.12, 57.25) controlPoint2: CGPointMake(18.52, 64.85)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(29.02, 64.75) controlPoint1: CGPointMake(28.22, 64.85) controlPoint2: CGPointMake(29.02, 64.75)];
    [voicemailBezierPath addLineToPoint: CGPointMake(29.02, 64.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(72.82, 64.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(90.12, 47.45) controlPoint1: CGPointMake(82.42, 64.65) controlPoint2: CGPointMake(90.12, 56.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 30.15) controlPoint1: CGPointMake(90.12, 37.95) controlPoint2: CGPointMake(82.42, 30.15)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(19.92, 47.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 39.95) controlPoint1: CGPointMake(19.92, 43.25) controlPoint2: CGPointMake(23.32, 39.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.92, 47.45) controlPoint1: CGPointMake(31.52, 39.95) controlPoint2: CGPointMake(34.92, 43.35)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 54.95) controlPoint1: CGPointMake(34.92, 51.65) controlPoint2: CGPointMake(31.52, 54.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(19.92, 47.45) controlPoint1: CGPointMake(23.32, 54.95) controlPoint2: CGPointMake(19.92, 51.65)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(72.82, 55.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(65.32, 47.55) controlPoint1: CGPointMake(68.62, 55.05) controlPoint2: CGPointMake(65.32, 51.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 40.05) controlPoint1: CGPointMake(65.32, 43.35) controlPoint2: CGPointMake(68.72, 40.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(80.32, 47.55) controlPoint1: CGPointMake(76.92, 40.05) controlPoint2: CGPointMake(80.32, 43.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 55.05) controlPoint1: CGPointMake(80.42, 51.65) controlPoint2: CGPointMake(77.02, 55.05)];
    [voicemailBezierPath closePath];
    voicemailBezierPath.miterLimit = 4;

    [JCStyleKit.loginColor setFill];
    [voicemailBezierPath fill];
}

+ (void)drawSpeakerButtonWithSpeakerFrame: (CGRect)speakerFrame speakerIsSelected: (BOOL)speakerIsSelected;
{

    //// Variable Declarations
    UIColor* expression = speakerIsSelected ? JCStyleKit.selectedButtonColor : JCStyleKit.unSelectedButtonColor;


    //// Subframes
    CGRect innerFrame = CGRectMake(CGRectGetMinX(speakerFrame) + floor(CGRectGetWidth(speakerFrame) * 0.37949 + 0.5), CGRectGetMinY(speakerFrame) + floor(CGRectGetHeight(speakerFrame) * 0.21429 + 0.5), floor(CGRectGetWidth(speakerFrame) * 0.62051 + 0.5) - floor(CGRectGetWidth(speakerFrame) * 0.37949 + 0.5), floor(CGRectGetHeight(speakerFrame) * 0.77143 + 0.5) - floor(CGRectGetHeight(speakerFrame) * 0.21429 + 0.5));
    CGRect speakerGroup = CGRectMake(CGRectGetMinX(innerFrame) + 0.75, CGRectGetMinY(innerFrame) + floor(CGRectGetHeight(innerFrame) * 0.02564) + 0.5, floor((CGRectGetWidth(innerFrame) - 0.75) * 0.99243 + 0.6) - 0.1, floor(CGRectGetHeight(innerFrame) * 0.98718 - 0.5) - floor(CGRectGetHeight(innerFrame) * 0.02564) + 0.5);


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(speakerFrame) + 2, CGRectGetMinY(speakerFrame) + 2, floor((CGRectGetWidth(speakerFrame) - 2) * 0.98964 + 0.5), floor((CGRectGetHeight(speakerFrame) - 2) * 0.97059 + 0.5)) cornerRadius: 1];
    [expression setStroke];
    rectanglePath.lineWidth = 0.5;
    [rectanglePath stroke];


    //// SpeakerGroup
    {
        //// SpeakerBezier Drawing
        UIBezierPath* speakerBezierPath = UIBezierPath.bezierPath;
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.28606 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.57213 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.00000 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.57213 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 1.00000 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.28606 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.52958 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.04156 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.59718 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41127 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.34930 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.04401 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.87775 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.79155 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.60282 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.95110 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.71549 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.70704 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47042 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.86797 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.65352 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.56901 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.23380 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.37183 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.86797 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.28732 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.87775 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.14930 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.95355 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.22817 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.34366 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71149 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64225 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.55211 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.76773 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.61972 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.66748 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.53239 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.69438 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.53239 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.50704 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.66748 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41408 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.44225 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.69438 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41408 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71149 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.30423 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.77017 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.32676 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.39437 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        speakerBezierPath.miterLimit = 4;

        [expression setFill];
        [speakerBezierPath fill];
    }
}

+ (void)drawComposeIconWithFrame: (CGRect)frame;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.3, CGRectGetMinY(frame) + 24.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 24.9, CGRectGetMinY(frame) + 26.9) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.6, CGRectGetMinY(frame) + 24.4)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 68.7, CGRectGetMinY(frame) + 24.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 45.7, CGRectGetMinY(frame) + 24.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 57.2, CGRectGetMinY(frame) + 24.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 59.4, CGRectGetMinY(frame) + 33.9) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.6, CGRectGetMinY(frame) + 27.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 62.5, CGRectGetMinY(frame) + 30.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 58.7, CGRectGetMinY(frame) + 34) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 59.2, CGRectGetMinY(frame) + 34.1) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 58.9, CGRectGetMinY(frame) + 34)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.6, CGRectGetMinY(frame) + 34) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 50.7, CGRectGetMinY(frame) + 34) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 42.6, CGRectGetMinY(frame) + 34)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 32.1, CGRectGetMinY(frame) + 34.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 33.7, CGRectGetMinY(frame) + 34) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 32.8, CGRectGetMinY(frame) + 34.1)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 38.9) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 30.5, CGRectGetMinY(frame) + 35.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 37)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 86.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 54.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 70.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34, CGRectGetMinY(frame) + 90.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 88.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 31.6, CGRectGetMinY(frame) + 90.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.4, CGRectGetMinY(frame) + 90.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 49.8, CGRectGetMinY(frame) + 90.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 65.6, CGRectGetMinY(frame) + 90.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 86.2) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 83.8, CGRectGetMinY(frame) + 90.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 88.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 61.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 77.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 69.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86.4, CGRectGetMinY(frame) + 60.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 85.9, CGRectGetMinY(frame) + 60.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86.2, CGRectGetMinY(frame) + 60.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 51.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 89.4, CGRectGetMinY(frame) + 57.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 92.4, CGRectGetMinY(frame) + 54.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 83.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 62.2) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 72.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.1, CGRectGetMinY(frame) + 89) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 85.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 95.5, CGRectGetMinY(frame) + 87.2)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 89.6, CGRectGetMinY(frame) + 97.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 94.4, CGRectGetMinY(frame) + 92.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 92.4, CGRectGetMinY(frame) + 95.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.2, CGRectGetMinY(frame) + 100.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 87.2, CGRectGetMinY(frame) + 99.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 84.2, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.9, CGRectGetMinY(frame) + 100.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.8, CGRectGetMinY(frame) + 100.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 50.4, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 31.6, CGRectGetMinY(frame) + 100.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 33.8, CGRectGetMinY(frame) + 100.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 32.7, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.8, CGRectGetMinY(frame) + 94.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 28.1, CGRectGetMinY(frame) + 99.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 24.9, CGRectGetMinY(frame) + 97.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 86) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 20.9, CGRectGetMinY(frame) + 92) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 89)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 38.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 70.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 54.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.8, CGRectGetMinY(frame) + 36) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 20.7, CGRectGetMinY(frame) + 33.1)];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 92.1, CGRectGetMinY(frame) + 20.2) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 20.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 89.1, CGRectGetMinY(frame) + 19.7)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 98.2, CGRectGetMinY(frame) + 24.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 94.6, CGRectGetMinY(frame) + 20.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 96.8, CGRectGetMinY(frame) + 22.1)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 98.6, CGRectGetMinY(frame) + 34.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 100.2, CGRectGetMinY(frame) + 27) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 100.4, CGRectGetMinY(frame) + 31)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.6, CGRectGetMinY(frame) + 37.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 97.9, CGRectGetMinY(frame) + 35.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 96.6, CGRectGetMinY(frame) + 36.5)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 90.1, CGRectGetMinY(frame) + 43.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 93.8, CGRectGetMinY(frame) + 39.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 91.9, CGRectGetMinY(frame) + 41.3)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.6, CGRectGetMinY(frame) + 30) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 85.6, CGRectGetMinY(frame) + 38.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.1, CGRectGetMinY(frame) + 34.3)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 78.9, CGRectGetMinY(frame) + 27.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.4, CGRectGetMinY(frame) + 25.1)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 72.4, CGRectGetMinY(frame) + 34.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 53.3, CGRectGetMinY(frame) + 53.2) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 62.8, CGRectGetMinY(frame) + 43.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 88.1, CGRectGetMinY(frame) + 45.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 76.9, CGRectGetMinY(frame) + 38.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 83.6, CGRectGetMinY(frame) + 40.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 57.7, CGRectGetMinY(frame) + 75.4) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 78.7, CGRectGetMinY(frame) + 54.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 67.1, CGRectGetMinY(frame) + 66.1)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 56.6, CGRectGetMinY(frame) + 76.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 57.3, CGRectGetMinY(frame) + 75.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 57.1, CGRectGetMinY(frame) + 76.2)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 38.4, CGRectGetMinY(frame) + 81.4) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 50.5, CGRectGetMinY(frame) + 78) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 44.5, CGRectGetMinY(frame) + 79.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.2, CGRectGetMinY(frame) + 63.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 40, CGRectGetMinY(frame) + 75.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 41.6, CGRectGetMinY(frame) + 69.6)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 43.4, CGRectGetMinY(frame) + 63.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 43.4, CGRectGetMinY(frame) + 63)];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawContactsIcon;
{
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// contactsGroup
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(91.5, 75.7)];
        [bezierPath addCurveToPoint: CGPointMake(88.2, 79) controlPoint1: CGPointMake(91.5, 77.5) controlPoint2: CGPointMake(90, 79)];
        [bezierPath addLineToPoint: CGPointMake(82.8, 79)];
        [bezierPath addCurveToPoint: CGPointMake(79.5, 75.7) controlPoint1: CGPointMake(81, 79) controlPoint2: CGPointMake(79.5, 77.5)];
        [bezierPath addLineToPoint: CGPointMake(79.5, 65.3)];
        [bezierPath addCurveToPoint: CGPointMake(82.8, 62) controlPoint1: CGPointMake(79.5, 63.5) controlPoint2: CGPointMake(81, 62)];
        [bezierPath addLineToPoint: CGPointMake(88.2, 62)];
        [bezierPath addCurveToPoint: CGPointMake(91.5, 65.3) controlPoint1: CGPointMake(90, 62) controlPoint2: CGPointMake(91.5, 63.5)];
        [bezierPath addLineToPoint: CGPointMake(91.5, 75.7)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [color2 setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(91.5, 54.7)];
        [bezier2Path addCurveToPoint: CGPointMake(88.2, 58) controlPoint1: CGPointMake(91.5, 56.5) controlPoint2: CGPointMake(90, 58)];
        [bezier2Path addLineToPoint: CGPointMake(82.8, 58)];
        [bezier2Path addCurveToPoint: CGPointMake(79.5, 54.7) controlPoint1: CGPointMake(81, 58) controlPoint2: CGPointMake(79.5, 56.5)];
        [bezier2Path addLineToPoint: CGPointMake(79.5, 44.3)];
        [bezier2Path addCurveToPoint: CGPointMake(82.8, 41) controlPoint1: CGPointMake(79.5, 42.5) controlPoint2: CGPointMake(81, 41)];
        [bezier2Path addLineToPoint: CGPointMake(88.2, 41)];
        [bezier2Path addCurveToPoint: CGPointMake(91.5, 44.3) controlPoint1: CGPointMake(90, 41) controlPoint2: CGPointMake(91.5, 42.5)];
        [bezier2Path addLineToPoint: CGPointMake(91.5, 54.7)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color2 setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(91.5, 31.7)];
        [bezier3Path addCurveToPoint: CGPointMake(88.2, 35) controlPoint1: CGPointMake(91.5, 33.5) controlPoint2: CGPointMake(90, 35)];
        [bezier3Path addLineToPoint: CGPointMake(82.8, 35)];
        [bezier3Path addCurveToPoint: CGPointMake(79.5, 31.7) controlPoint1: CGPointMake(81, 35) controlPoint2: CGPointMake(79.5, 33.5)];
        [bezier3Path addLineToPoint: CGPointMake(79.5, 21.3)];
        [bezier3Path addCurveToPoint: CGPointMake(82.8, 18) controlPoint1: CGPointMake(79.5, 19.5) controlPoint2: CGPointMake(81, 18)];
        [bezier3Path addLineToPoint: CGPointMake(88.2, 18)];
        [bezier3Path addCurveToPoint: CGPointMake(91.5, 21.3) controlPoint1: CGPointMake(90, 18) controlPoint2: CGPointMake(91.5, 19.5)];
        [bezier3Path addLineToPoint: CGPointMake(91.5, 31.7)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [color2 setFill];
        [bezier3Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(81.9, 9)];
        [bezier4Path addLineToPoint: CGPointMake(15.8, 9)];
        [bezier4Path addCurveToPoint: CGPointMake(12.5, 12.7) controlPoint1: CGPointMake(13.9, 9) controlPoint2: CGPointMake(12.5, 10.9)];
        [bezier4Path addLineToPoint: CGPointMake(12.5, 86.1)];
        [bezier4Path addCurveToPoint: CGPointMake(16.8, 89) controlPoint1: CGPointMake(12.5, 87.9) controlPoint2: CGPointMake(13.9, 89)];
        [bezier4Path addLineToPoint: CGPointMake(83, 89)];
        [bezier4Path addCurveToPoint: CGPointMake(85.5, 86.1) controlPoint1: CGPointMake(83.8, 89) controlPoint2: CGPointMake(85.5, 87.9)];
        [bezier4Path addLineToPoint: CGPointMake(85.5, 12.7)];
        [bezier4Path addCurveToPoint: CGPointMake(81.9, 9) controlPoint1: CGPointMake(85.5, 10.9) controlPoint2: CGPointMake(83.8, 9)];
        [bezier4Path closePath];
        [bezier4Path moveToPoint: CGPointMake(69.8, 64.5)];
        [bezier4Path addCurveToPoint: CGPointMake(67.6, 66.7) controlPoint1: CGPointMake(69.4, 65.5) controlPoint2: CGPointMake(68.5, 66.2)];
        [bezier4Path addCurveToPoint: CGPointMake(62.7, 68.2) controlPoint1: CGPointMake(66.1, 67.5) controlPoint2: CGPointMake(64.4, 67.9)];
        [bezier4Path addCurveToPoint: CGPointMake(53.4, 68.8) controlPoint1: CGPointMake(59.6, 68.7) controlPoint2: CGPointMake(56.5, 68.8)];
        [bezier4Path addCurveToPoint: CGPointMake(45.5, 68.3) controlPoint1: CGPointMake(50.7, 68.8) controlPoint2: CGPointMake(48.1, 68.7)];
        [bezier4Path addCurveToPoint: CGPointMake(40.4, 67) controlPoint1: CGPointMake(43.8, 68.1) controlPoint2: CGPointMake(42, 67.7)];
        [bezier4Path addCurveToPoint: CGPointMake(37.8, 65.2) controlPoint1: CGPointMake(39.4, 66.6) controlPoint2: CGPointMake(38.5, 66)];
        [bezier4Path addCurveToPoint: CGPointMake(37.2, 63.2) controlPoint1: CGPointMake(37.4, 64.6) controlPoint2: CGPointMake(37.1, 63.9)];
        [bezier4Path addCurveToPoint: CGPointMake(37.3, 61.3) controlPoint1: CGPointMake(37.2, 62.6) controlPoint2: CGPointMake(37.1, 61.9)];
        [bezier4Path addCurveToPoint: CGPointMake(38.5, 59.4) controlPoint1: CGPointMake(37.5, 60.6) controlPoint2: CGPointMake(38, 59.9)];
        [bezier4Path addCurveToPoint: CGPointMake(41.7, 56.9) controlPoint1: CGPointMake(39.4, 58.4) controlPoint2: CGPointMake(40.5, 57.6)];
        [bezier4Path addCurveToPoint: CGPointMake(47.6, 54.1) controlPoint1: CGPointMake(43.6, 55.8) controlPoint2: CGPointMake(45.5, 54.8)];
        [bezier4Path addCurveToPoint: CGPointMake(48.3, 53.8) controlPoint1: CGPointMake(47.8, 54) controlPoint2: CGPointMake(48.1, 53.9)];
        [bezier4Path addCurveToPoint: CGPointMake(49.2, 49.5) controlPoint1: CGPointMake(49.4, 52.7) controlPoint2: CGPointMake(49.8, 50.9)];
        [bezier4Path addCurveToPoint: CGPointMake(45.1, 41.6) controlPoint1: CGPointMake(47.1, 47.3) controlPoint2: CGPointMake(45.7, 44.5)];
        [bezier4Path addCurveToPoint: CGPointMake(45.6, 34.9) controlPoint1: CGPointMake(44.7, 39.4) controlPoint2: CGPointMake(44.7, 37)];
        [bezier4Path addCurveToPoint: CGPointMake(48.7, 31.1) controlPoint1: CGPointMake(46.2, 33.4) controlPoint2: CGPointMake(47.3, 32)];
        [bezier4Path addCurveToPoint: CGPointMake(52.5, 29.7) controlPoint1: CGPointMake(49.8, 30.3) controlPoint2: CGPointMake(51.2, 29.9)];
        [bezier4Path addCurveToPoint: CGPointMake(58.9, 31.1) controlPoint1: CGPointMake(54.7, 29.4) controlPoint2: CGPointMake(57, 29.9)];
        [bezier4Path addCurveToPoint: CGPointMake(62.1, 34.9) controlPoint1: CGPointMake(60.3, 32) controlPoint2: CGPointMake(61.4, 33.4)];
        [bezier4Path addCurveToPoint: CGPointMake(62.7, 41) controlPoint1: CGPointMake(62.9, 36.8) controlPoint2: CGPointMake(63, 39)];
        [bezier4Path addCurveToPoint: CGPointMake(58.4, 49.5) controlPoint1: CGPointMake(62.1, 44.2) controlPoint2: CGPointMake(60.6, 47.1)];
        [bezier4Path addCurveToPoint: CGPointMake(58.2, 50.2) controlPoint1: CGPointMake(58.2, 49.7) controlPoint2: CGPointMake(58.2, 50)];
        [bezier4Path addCurveToPoint: CGPointMake(58.6, 53.4) controlPoint1: CGPointMake(58, 51.3) controlPoint2: CGPointMake(58, 52.4)];
        [bezier4Path addCurveToPoint: CGPointMake(59.3, 54.1) controlPoint1: CGPointMake(58.8, 53.7) controlPoint2: CGPointMake(59, 54)];
        [bezier4Path addCurveToPoint: CGPointMake(65.4, 56.8) controlPoint1: CGPointMake(61.4, 54.8) controlPoint2: CGPointMake(63.5, 55.7)];
        [bezier4Path addCurveToPoint: CGPointMake(69.1, 59.7) controlPoint1: CGPointMake(66.7, 57.6) controlPoint2: CGPointMake(68.1, 58.5)];
        [bezier4Path addCurveToPoint: CGPointMake(70.3, 62.5) controlPoint1: CGPointMake(69.8, 60.5) controlPoint2: CGPointMake(70.3, 61.4)];
        [bezier4Path addCurveToPoint: CGPointMake(69.8, 64.5) controlPoint1: CGPointMake(70, 62.9) controlPoint2: CGPointMake(70.1, 63.7)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier4Path fill];


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = UIBezierPath.bezierPath;
        [bezier5Path moveToPoint: CGPointMake(23.5, 85.7)];
        [bezier5Path addCurveToPoint: CGPointMake(20.2, 89) controlPoint1: CGPointMake(23.5, 87.5) controlPoint2: CGPointMake(22, 89)];
        [bezier5Path addLineToPoint: CGPointMake(15.8, 89)];
        [bezier5Path addCurveToPoint: CGPointMake(12.5, 85.7) controlPoint1: CGPointMake(14, 89) controlPoint2: CGPointMake(12.5, 87.5)];
        [bezier5Path addLineToPoint: CGPointMake(12.5, 12.3)];
        [bezier5Path addCurveToPoint: CGPointMake(15.8, 9) controlPoint1: CGPointMake(12.5, 10.5) controlPoint2: CGPointMake(14, 9)];
        [bezier5Path addLineToPoint: CGPointMake(20.2, 9)];
        [bezier5Path addCurveToPoint: CGPointMake(23.5, 12.3) controlPoint1: CGPointMake(22, 9) controlPoint2: CGPointMake(23.5, 10.5)];
        [bezier5Path addLineToPoint: CGPointMake(23.5, 85.7)];
        [bezier5Path closePath];
        bezier5Path.miterLimit = 4;

        [color2 setFill];
        [bezier5Path fill];
    }
}

+ (void)drawTrashButtonWithOuterFrame: (CGRect)outerFrame selectWithDeleteColor: (BOOL)selectWithDeleteColor;
{

    //// Variable Declarations
    UIColor* isSelectWithDeleteColor = selectWithDeleteColor ? JCStyleKit.deleteColor : JCStyleKit.unSelectedButtonColor;


    //// Subframes
    CGRect innerFrame = CGRectMake(CGRectGetMinX(outerFrame) + floor(CGRectGetWidth(outerFrame) * 0.29268 + 0.5), CGRectGetMinY(outerFrame) + floor(CGRectGetHeight(outerFrame) * 0.21429 + 0.5), floor(CGRectGetWidth(outerFrame) * 0.71951 + 0.5) - floor(CGRectGetWidth(outerFrame) * 0.29268 + 0.5), floor(CGRectGetHeight(outerFrame) * 0.77143 + 0.5) - floor(CGRectGetHeight(outerFrame) * 0.21429 + 0.5));
    CGRect group = CGRectMake(CGRectGetMinX(innerFrame) + 1, CGRectGetMinY(innerFrame) + 1, floor((CGRectGetWidth(innerFrame) - 1) * 0.97059 + 0.5), floor((CGRectGetHeight(innerFrame) - 1) * 0.97368 + 0.5));


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(outerFrame) + 2, CGRectGetMinY(outerFrame) + 2, floor((CGRectGetWidth(outerFrame) - 2) * 0.97500 + 0.5), floor((CGRectGetHeight(outerFrame) - 2) * 0.97059 + 0.5)) cornerRadius: 1];
    [isSelectWithDeleteColor setStroke];
    rectanglePath.lineWidth = 0.5;
    [rectanglePath stroke];


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30750 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.08485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16061 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.13788 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83333 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.85455 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30875 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29125 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [isSelectWithDeleteColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.73636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67879 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.26364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09750 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.04242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11375 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11125 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [isSelectWithDeleteColor setFill];
        [bezier2Path fill];
    }
}

+ (void)drawPlay_PauseWithFrame: (CGRect)frame playPauseDisplaysPlay: (BOOL)playPauseDisplaysPlay;
{

    //// Variable Declarations
    BOOL playPauseDisplaysPause = playPauseDisplaysPlay ? NO : YES;


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.31683 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.22321 - 0.5) + 1, floor(CGRectGetWidth(frame) * 0.84158 + 0.5) - floor(CGRectGetWidth(frame) * 0.31683 + 0.5), floor(CGRectGetHeight(frame) * 0.76786 - 0.5) - floor(CGRectGetHeight(frame) * 0.22321 - 0.5));


    if (playPauseDisplaysPlay)
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84011 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49769 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31928 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76873 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31928 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22664 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84011 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49769 * CGRectGetHeight(frame))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];
    }


    if (playPauseDisplaysPause)
    {
        //// Group
        {
            //// Rectangle Drawing
            UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.41509 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [JCStyleKit.unSelectedButtonColor setFill];
            [rectanglePath fill];


            //// Rectangle 2 Drawing
            UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.58491 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 1.00000 + 0.5) - floor(CGRectGetWidth(group) * 0.58491 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [JCStyleKit.unSelectedButtonColor setFill];
            [rectangle2Path fill];
        }
    }
}

+ (void)drawAddIcon;
{

    //// addBezier Drawing
    UIBezierPath* addBezierPath = UIBezierPath.bezierPath;
    [addBezierPath moveToPoint: CGPointMake(91, 44)];
    [addBezierPath addLineToPoint: CGPointMake(56, 44)];
    [addBezierPath addLineToPoint: CGPointMake(56, 9)];
    [addBezierPath addLineToPoint: CGPointMake(47, 9)];
    [addBezierPath addLineToPoint: CGPointMake(47, 44)];
    [addBezierPath addLineToPoint: CGPointMake(11, 44)];
    [addBezierPath addLineToPoint: CGPointMake(11, 53)];
    [addBezierPath addLineToPoint: CGPointMake(47, 53)];
    [addBezierPath addLineToPoint: CGPointMake(47, 89)];
    [addBezierPath addLineToPoint: CGPointMake(56, 89)];
    [addBezierPath addLineToPoint: CGPointMake(56, 53)];
    [addBezierPath addLineToPoint: CGPointMake(91, 53)];
    [addBezierPath addLineToPoint: CGPointMake(91, 44)];
    [addBezierPath closePath];
    addBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [addBezierPath fill];
}

+ (void)drawCanvas3WithFrame: (CGRect)frame;
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.09922 - 0.42) + 0.92, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.11947 - 0.32) + 0.82, floor(CGRectGetWidth(frame) * 0.89863 - 0.36) - floor(CGRectGetWidth(frame) * 0.09922 - 0.42) - 0.06, floor(CGRectGetHeight(frame) * 0.92182 + 0.45) - floor(CGRectGetHeight(frame) * 0.11947 - 0.32) - 0.76);


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18023 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.06264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08519 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.12143 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05403 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61054 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32283 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.49421 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17243 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57176 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09516 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53298 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.48545 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49170 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.48795 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18398 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38538 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.28405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15271 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17991 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.17272 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.16146 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23475 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13269 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18988 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21107 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82302 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43042 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62610 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.17647 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85418 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.14645 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76941 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.37412 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57176 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82427 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.79943 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85418 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51144 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71957 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61613 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.83195 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50396 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82570 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50770 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82945 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50520 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39179 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.86948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46657 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79062 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52515 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65726 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94078 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85916 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81305 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.94579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83673 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87198 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96635 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93203 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.90154 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94142 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76691 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98878 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.80443 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18773 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57426 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.38162 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.14645 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99751 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.17397 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.16021 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03637 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93021 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.10267 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99003 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96510 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82177 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01260 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89655 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85916 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23350 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62610 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + -0.00116 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19860 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01010 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16246 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.90326 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00168 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00667 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.86573 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00455 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97956 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05029 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93453 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00667 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96205 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02536 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98457 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00458 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08643 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13629 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94704 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21855 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97581 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19237 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.95955 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20484 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87824 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28709 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92452 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24098 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90075 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26466 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.70936 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12382 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82195 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23226 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76565 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17742 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.73813 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09391 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76941 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06275 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65683 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41790 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41298 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53674 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29457 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85322 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31202 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.71312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22976 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.79693 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25718 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.47294 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68966 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.73563 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.59053 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57375 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.45918 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70088 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.46794 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69340 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46544 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69963 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76444 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38287 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72207 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30782 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74325 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29156 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54384 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25153 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69091 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27154 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61737 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.29406 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54010 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29406 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53512 * CGRectGetHeight(group))];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group))];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawEmailIcon;
{

    //// emailGroup
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(11.1, 40.9)];
        [bezier2Path addLineToPoint: CGPointMake(11.1, 77.3)];
        [bezier2Path addLineToPoint: CGPointMake(91.1, 77.3)];
        [bezier2Path addLineToPoint: CGPointMake(91.1, 40.9)];
        [bezier2Path addLineToPoint: CGPointMake(51.1, 59.5)];
        [bezier2Path addLineToPoint: CGPointMake(11.1, 40.9)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(11.1, 23.3)];
        [bezier3Path addLineToPoint: CGPointMake(11.1, 34.5)];
        [bezier3Path addLineToPoint: CGPointMake(51.1, 52.1)];
        [bezier3Path addLineToPoint: CGPointMake(91.1, 34.5)];
        [bezier3Path addLineToPoint: CGPointMake(91.1, 23.3)];
        [bezier3Path addLineToPoint: CGPointMake(11.1, 23.3)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawBack_buttonWithBack_ButtonFrame: (CGRect)back_ButtonFrame;
{

    //// Back_Button Drawing
    UIBezierPath* back_ButtonPath = UIBezierPath.bezierPath;
    [back_ButtonPath moveToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.40800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.41800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.50500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.52100 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.40300 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.79700 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.13000 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.63000 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.11700 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.34100 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.40300 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.23800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.50500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.22800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.62500 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.91700 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.79400 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.90500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.40800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath closePath];
    back_ButtonPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [back_ButtonPath fill];
}

+ (void)drawCanvas6WithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.36800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.87500 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49100 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.48800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86100 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51200 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88800 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.51400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88900 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.52600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.87500 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86100 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.77400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49200 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.77500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20800 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.65700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40400 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.46100 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40400 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.46100 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawMessageIcon;
{

    //// messagesBezier Drawing
    UIBezierPath* messagesBezierPath = UIBezierPath.bezierPath;
    [messagesBezierPath moveToPoint: CGPointMake(90, 65.43)];
    [messagesBezierPath addCurveToPoint: CGPointMake(81.6, 73.63) controlPoint1: CGPointMake(90, 69.93) controlPoint2: CGPointMake(86.2, 73.63)];
    [messagesBezierPath addLineToPoint: CGPointMake(73.9, 73.63)];
    [messagesBezierPath addLineToPoint: CGPointMake(50.8, 91.73)];
    [messagesBezierPath addLineToPoint: CGPointMake(50.7, 73.23)];
    [messagesBezierPath addLineToPoint: CGPointMake(18.9, 73.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(10, 65.43) controlPoint1: CGPointMake(14.4, 73.23) controlPoint2: CGPointMake(10, 69.93)];
    [messagesBezierPath addLineToPoint: CGPointMake(10, 24.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(18.9, 16.23) controlPoint1: CGPointMake(10, 19.73) controlPoint2: CGPointMake(14.4, 16.23)];
    [messagesBezierPath addLineToPoint: CGPointMake(81.5, 16.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(90, 24.23) controlPoint1: CGPointMake(86, 16.23) controlPoint2: CGPointMake(90, 19.73)];
    [messagesBezierPath addLineToPoint: CGPointMake(90, 65.43)];
    [messagesBezierPath closePath];
    messagesBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [messagesBezierPath fill];
}

+ (void)drawMoreIcon;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(27.29, 42.79)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 57.07) controlPoint1: CGPointMake(31.24, 46.73) controlPoint2: CGPointMake(31.24, 53.13)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 57.07) controlPoint1: CGPointMake(23.35, 61.02) controlPoint2: CGPointMake(16.95, 61.02)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 42.79) controlPoint1: CGPointMake(9.06, 53.13) controlPoint2: CGPointMake(9.06, 46.73)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 42.79) controlPoint1: CGPointMake(16.95, 38.84) controlPoint2: CGPointMake(23.35, 38.84)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(57.09, 42.89)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 57.17) controlPoint1: CGPointMake(61.04, 46.83) controlPoint2: CGPointMake(61.04, 53.23)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 57.17) controlPoint1: CGPointMake(53.15, 61.12) controlPoint2: CGPointMake(46.75, 61.12)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 42.89) controlPoint1: CGPointMake(38.86, 53.23) controlPoint2: CGPointMake(38.86, 46.83)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 42.89) controlPoint1: CGPointMake(46.75, 38.94) controlPoint2: CGPointMake(53.15, 38.94)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(86.99, 42.79)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 57.07) controlPoint1: CGPointMake(90.94, 46.73) controlPoint2: CGPointMake(90.94, 53.13)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 57.07) controlPoint1: CGPointMake(83.05, 61.02) controlPoint2: CGPointMake(76.65, 61.02)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 42.79) controlPoint1: CGPointMake(68.76, 53.13) controlPoint2: CGPointMake(68.76, 46.73)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 42.79) controlPoint1: CGPointMake(76.65, 38.84) controlPoint2: CGPointMake(83.05, 38.84)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawCanvas9WithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67071 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.83000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99596 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.32000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.21000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67071 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.32000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44848 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.21000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.83000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44848 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.selectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawSearchIcon;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(89, 80.8)];
    [bezierPath addCurveToPoint: CGPointMake(87.2, 85.1) controlPoint1: CGPointMake(89, 82.5) controlPoint2: CGPointMake(88.4, 83.9)];
    [bezierPath addCurveToPoint: CGPointMake(82.8, 87) controlPoint1: CGPointMake(86, 86.4) controlPoint2: CGPointMake(84.5, 87)];
    [bezierPath addCurveToPoint: CGPointMake(78.5, 85.2) controlPoint1: CGPointMake(81.1, 87) controlPoint2: CGPointMake(79.6, 86.4)];
    [bezierPath addLineToPoint: CGPointMake(62, 68.7)];
    [bezierPath addCurveToPoint: CGPointMake(42.8, 74.7) controlPoint1: CGPointMake(56.3, 72.7) controlPoint2: CGPointMake(49.9, 74.7)];
    [bezierPath addCurveToPoint: CGPointMake(29.7, 72) controlPoint1: CGPointMake(38.2, 74.7) controlPoint2: CGPointMake(33.8, 73.8)];
    [bezierPath addCurveToPoint: CGPointMake(18.9, 64.8) controlPoint1: CGPointMake(25.5, 70.2) controlPoint2: CGPointMake(21.9, 67.8)];
    [bezierPath addCurveToPoint: CGPointMake(11.7, 54) controlPoint1: CGPointMake(15.9, 61.8) controlPoint2: CGPointMake(13.5, 58.2)];
    [bezierPath addCurveToPoint: CGPointMake(9, 40.8) controlPoint1: CGPointMake(9.9, 49.8) controlPoint2: CGPointMake(9, 45.4)];
    [bezierPath addCurveToPoint: CGPointMake(11.7, 27.7) controlPoint1: CGPointMake(9, 36.2) controlPoint2: CGPointMake(9.9, 31.8)];
    [bezierPath addCurveToPoint: CGPointMake(18.9, 16.9) controlPoint1: CGPointMake(13.5, 23.5) controlPoint2: CGPointMake(15.9, 19.9)];
    [bezierPath addCurveToPoint: CGPointMake(29.7, 9.7) controlPoint1: CGPointMake(21.9, 13.9) controlPoint2: CGPointMake(25.5, 11.5)];
    [bezierPath addCurveToPoint: CGPointMake(42.8, 7) controlPoint1: CGPointMake(33.9, 7.9) controlPoint2: CGPointMake(38.3, 7)];
    [bezierPath addCurveToPoint: CGPointMake(55.9, 9.7) controlPoint1: CGPointMake(47.4, 7) controlPoint2: CGPointMake(51.8, 7.9)];
    [bezierPath addCurveToPoint: CGPointMake(66.7, 16.9) controlPoint1: CGPointMake(60, 11.5) controlPoint2: CGPointMake(63.7, 13.9)];
    [bezierPath addCurveToPoint: CGPointMake(73.9, 27.7) controlPoint1: CGPointMake(69.7, 19.9) controlPoint2: CGPointMake(72.1, 23.5)];
    [bezierPath addCurveToPoint: CGPointMake(76.6, 40.8) controlPoint1: CGPointMake(75.7, 31.9) controlPoint2: CGPointMake(76.6, 36.3)];
    [bezierPath addCurveToPoint: CGPointMake(70.6, 60) controlPoint1: CGPointMake(76.6, 47.9) controlPoint2: CGPointMake(74.6, 54.2)];
    [bezierPath addLineToPoint: CGPointMake(87.1, 76.5)];
    [bezierPath addCurveToPoint: CGPointMake(89, 80.8) controlPoint1: CGPointMake(88.4, 77.7) controlPoint2: CGPointMake(89, 79.1)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(58.1, 56.1)];
    [bezierPath addCurveToPoint: CGPointMake(64.4, 40.9) controlPoint1: CGPointMake(62.3, 51.9) controlPoint2: CGPointMake(64.4, 46.8)];
    [bezierPath addCurveToPoint: CGPointMake(58.1, 25.7) controlPoint1: CGPointMake(64.4, 35) controlPoint2: CGPointMake(62.3, 29.9)];
    [bezierPath addCurveToPoint: CGPointMake(42.9, 19.4) controlPoint1: CGPointMake(53.9, 21.5) controlPoint2: CGPointMake(48.8, 19.4)];
    [bezierPath addCurveToPoint: CGPointMake(27.7, 25.7) controlPoint1: CGPointMake(37, 19.4) controlPoint2: CGPointMake(31.9, 21.5)];
    [bezierPath addCurveToPoint: CGPointMake(21.4, 40.9) controlPoint1: CGPointMake(23.5, 29.9) controlPoint2: CGPointMake(21.4, 35)];
    [bezierPath addCurveToPoint: CGPointMake(27.7, 56.1) controlPoint1: CGPointMake(21.4, 46.8) controlPoint2: CGPointMake(23.5, 51.9)];
    [bezierPath addCurveToPoint: CGPointMake(42.9, 62.4) controlPoint1: CGPointMake(31.9, 60.3) controlPoint2: CGPointMake(37, 62.4)];
    [bezierPath addCurveToPoint: CGPointMake(58.1, 56.1) controlPoint1: CGPointMake(48.8, 62.4) controlPoint2: CGPointMake(53.8, 60.3)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawStarIcon;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(50.9, 11.1)];
    [bezierPath addLineToPoint: CGPointMake(63.1, 35.8)];
    [bezierPath addLineToPoint: CGPointMake(90.4, 39.8)];
    [bezierPath addLineToPoint: CGPointMake(70.6, 59.1)];
    [bezierPath addLineToPoint: CGPointMake(75.3, 86.3)];
    [bezierPath addLineToPoint: CGPointMake(50.9, 73.4)];
    [bezierPath addLineToPoint: CGPointMake(26.5, 86.3)];
    [bezierPath addLineToPoint: CGPointMake(31.1, 59.1)];
    [bezierPath addLineToPoint: CGPointMake(11.4, 39.8)];
    [bezierPath addLineToPoint: CGPointMake(38.7, 35.8)];
    [bezierPath addLineToPoint: CGPointMake(50.9, 11.1)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawCanvas12WithFrame: (CGRect)frame;
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.16000 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.09000 + 0.5), floor(CGRectGetWidth(frame) * 0.82000 + 0.5) - floor(CGRectGetWidth(frame) * 0.16000 + 0.5), floor(CGRectGetHeight(frame) * 0.89000 + 0.5) - floor(CGRectGetHeight(frame) * 0.09000 + 0.5));


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30750 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.08485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16061 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.13788 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83333 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.85455 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30875 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29125 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.73636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67879 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.26364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09750 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.04242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11375 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11125 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];
    }
}

+ (void)drawTypingIcon;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(83.67, 16.8)];
    [bezierPath addLineToPoint: CGPointMake(20.97, 16.8)];
    [bezierPath addCurveToPoint: CGPointMake(10.97, 22.5) controlPoint1: CGPointMake(16.37, 16.8) controlPoint2: CGPointMake(10.97, 18)];
    [bezierPath addLineToPoint: CGPointMake(10.97, 63.8)];
    [bezierPath addCurveToPoint: CGPointMake(20.97, 72.8) controlPoint1: CGPointMake(10.97, 68.4) controlPoint2: CGPointMake(16.37, 72.8)];
    [bezierPath addLineToPoint: CGPointMake(52.87, 72.8)];
    [bezierPath addLineToPoint: CGPointMake(52.87, 91.2)];
    [bezierPath addLineToPoint: CGPointMake(75.97, 72.8)];
    [bezierPath addLineToPoint: CGPointMake(83.57, 72.8)];
    [bezierPath addCurveToPoint: CGPointMake(91.07, 63.8) controlPoint1: CGPointMake(88.17, 72.8) controlPoint2: CGPointMake(91.07, 68.3)];
    [bezierPath addLineToPoint: CGPointMake(91.07, 22.5)];
    [bezierPath addCurveToPoint: CGPointMake(83.67, 16.8) controlPoint1: CGPointMake(90.97, 18) controlPoint2: CGPointMake(88.27, 16.8)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(31.67, 51.5)];
    [bezierPath addCurveToPoint: CGPointMake(23.67, 43.5) controlPoint1: CGPointMake(27.27, 51.5) controlPoint2: CGPointMake(23.67, 47.9)];
    [bezierPath addCurveToPoint: CGPointMake(31.67, 35.5) controlPoint1: CGPointMake(23.67, 39.1) controlPoint2: CGPointMake(27.27, 35.5)];
    [bezierPath addCurveToPoint: CGPointMake(39.67, 43.5) controlPoint1: CGPointMake(36.07, 35.5) controlPoint2: CGPointMake(39.67, 39.1)];
    [bezierPath addCurveToPoint: CGPointMake(31.67, 51.5) controlPoint1: CGPointMake(39.67, 47.9) controlPoint2: CGPointMake(36.17, 51.5)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(51.97, 51.5)];
    [bezierPath addCurveToPoint: CGPointMake(43.97, 43.5) controlPoint1: CGPointMake(47.57, 51.5) controlPoint2: CGPointMake(43.97, 47.9)];
    [bezierPath addCurveToPoint: CGPointMake(51.97, 35.5) controlPoint1: CGPointMake(43.97, 39.1) controlPoint2: CGPointMake(47.57, 35.5)];
    [bezierPath addCurveToPoint: CGPointMake(59.97, 43.5) controlPoint1: CGPointMake(56.37, 35.5) controlPoint2: CGPointMake(59.97, 39.1)];
    [bezierPath addCurveToPoint: CGPointMake(51.97, 51.5) controlPoint1: CGPointMake(59.97, 47.9) controlPoint2: CGPointMake(56.37, 51.5)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(71.07, 51.5)];
    [bezierPath addCurveToPoint: CGPointMake(63.07, 43.5) controlPoint1: CGPointMake(66.67, 51.5) controlPoint2: CGPointMake(63.07, 47.9)];
    [bezierPath addCurveToPoint: CGPointMake(71.07, 35.5) controlPoint1: CGPointMake(63.07, 39.1) controlPoint2: CGPointMake(66.67, 35.5)];
    [bezierPath addCurveToPoint: CGPointMake(79.07, 43.5) controlPoint1: CGPointMake(75.47, 35.5) controlPoint2: CGPointMake(79.07, 39.1)];
    [bezierPath addCurveToPoint: CGPointMake(71.07, 51.5) controlPoint1: CGPointMake(79.07, 47.9) controlPoint2: CGPointMake(75.47, 51.5)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawUndoIcon;
{

    //// undoBezier Drawing
    UIBezierPath* undoBezierPath = UIBezierPath.bezierPath;
    [undoBezierPath moveToPoint: CGPointMake(48.55, 17.39)];
    [undoBezierPath addCurveToPoint: CGPointMake(74.65, 26.29) controlPoint1: CGPointMake(57.75, 16.79) controlPoint2: CGPointMake(67.15, 19.69)];
    [undoBezierPath addCurveToPoint: CGPointMake(77.95, 77.09) controlPoint1: CGPointMake(89.55, 39.39) controlPoint2: CGPointMake(91.05, 62.19)];
    [undoBezierPath addCurveToPoint: CGPointMake(27.15, 80.39) controlPoint1: CGPointMake(64.85, 91.99) controlPoint2: CGPointMake(42.05, 93.49)];
    [undoBezierPath addCurveToPoint: CGPointMake(14.95, 53.29) controlPoint1: CGPointMake(19.05, 73.19) controlPoint2: CGPointMake(14.95, 63.29)];
    [undoBezierPath addLineToPoint: CGPointMake(23.95, 53.29)];
    [undoBezierPath addCurveToPoint: CGPointMake(24.05, 55.09) controlPoint1: CGPointMake(23.95, 53.89) controlPoint2: CGPointMake(23.95, 54.49)];
    [undoBezierPath addCurveToPoint: CGPointMake(33.15, 73.59) controlPoint1: CGPointMake(24.55, 62.29) controlPoint2: CGPointMake(27.75, 68.89)];
    [undoBezierPath addCurveToPoint: CGPointMake(52.65, 80.29) controlPoint1: CGPointMake(38.55, 78.39) controlPoint2: CGPointMake(45.55, 80.69)];
    [undoBezierPath addCurveToPoint: CGPointMake(71.15, 71.19) controlPoint1: CGPointMake(59.85, 79.79) controlPoint2: CGPointMake(66.45, 76.59)];
    [undoBezierPath addCurveToPoint: CGPointMake(77.85, 51.69) controlPoint1: CGPointMake(75.95, 65.79) controlPoint2: CGPointMake(78.25, 58.79)];
    [undoBezierPath addCurveToPoint: CGPointMake(68.75, 33.19) controlPoint1: CGPointMake(77.35, 44.49) controlPoint2: CGPointMake(74.15, 37.89)];
    [undoBezierPath addCurveToPoint: CGPointMake(49.25, 26.49) controlPoint1: CGPointMake(63.35, 28.39) controlPoint2: CGPointMake(56.35, 26.09)];
    [undoBezierPath addLineToPoint: CGPointMake(49.65, 33.09)];
    [undoBezierPath addLineToPoint: CGPointMake(29.85, 22.79)];
    [undoBezierPath addLineToPoint: CGPointMake(48.15, 11.29)];
    [undoBezierPath addLineToPoint: CGPointMake(48.55, 17.39)];
    [undoBezierPath closePath];
    undoBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [undoBezierPath fill];
}

+ (void)drawDefaultAvatarIcon;
{

    //// defaultAvatarBezier Drawing
    UIBezierPath* defaultAvatarBezierPath = UIBezierPath.bezierPath;
    [defaultAvatarBezierPath moveToPoint: CGPointMake(236.94, 127.78)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(231.61, 117.85) controlPoint1: CGPointMake(237.16, 124.06) controlPoint2: CGPointMake(234.5, 120.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(215.16, 107.57) controlPoint1: CGPointMake(226.94, 113.6) controlPoint2: CGPointMake(221.16, 110.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(187.82, 98) controlPoint1: CGPointMake(206.49, 103.67) controlPoint2: CGPointMake(197.38, 100.48)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(184.71, 95.52) controlPoint1: CGPointMake(186.27, 97.64) controlPoint2: CGPointMake(185.6, 96.58)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(182.93, 84.17) controlPoint1: CGPointMake(182.27, 92.15) controlPoint2: CGPointMake(181.82, 87.9)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(184.04, 81.69) controlPoint1: CGPointMake(183.15, 83.29) controlPoint2: CGPointMake(183.38, 82.4)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(203.16, 51.56) controlPoint1: CGPointMake(193.82, 73.36) controlPoint2: CGPointMake(200.71, 62.72)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(200.49, 29.75) controlPoint1: CGPointMake(204.71, 44.29) controlPoint2: CGPointMake(204.05, 36.67)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(186.49, 16.11) controlPoint1: CGPointMake(197.6, 24.26) controlPoint2: CGPointMake(192.71, 19.47)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(158.04, 11.32) controlPoint1: CGPointMake(178.26, 11.85) controlPoint2: CGPointMake(168.04, 10.26)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(140.93, 16.28) controlPoint1: CGPointMake(152.04, 11.85) controlPoint2: CGPointMake(146.04, 13.62)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(127.15, 29.93) controlPoint1: CGPointMake(134.7, 19.47) controlPoint2: CGPointMake(130.03, 24.44)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(125.14, 53.86) controlPoint1: CGPointMake(123.37, 37.55) controlPoint2: CGPointMake(123.14, 45.88)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(143.37, 82.05) controlPoint1: CGPointMake(127.81, 64.32) controlPoint2: CGPointMake(134.26, 74.25)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(139.59, 97.29) controlPoint1: CGPointMake(146.26, 87.01) controlPoint2: CGPointMake(144.7, 93.57)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(136.26, 98.53) controlPoint1: CGPointMake(138.7, 98) controlPoint2: CGPointMake(137.37, 98.18)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(110.03, 108.63) controlPoint1: CGPointMake(127.15, 101.19) controlPoint2: CGPointMake(118.25, 104.56)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(95.81, 117.68) controlPoint1: CGPointMake(104.92, 111.12) controlPoint2: CGPointMake(100.03, 113.95)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(90.69, 124.59) controlPoint1: CGPointMake(93.58, 119.62) controlPoint2: CGPointMake(91.58, 121.93)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(90.03, 131.32) controlPoint1: CGPointMake(89.81, 126.72) controlPoint2: CGPointMake(90.25, 129.2)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(92.92, 138.59) controlPoint1: CGPointMake(89.81, 133.98) controlPoint2: CGPointMake(90.92, 136.46)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(104.47, 144.97) controlPoint1: CGPointMake(95.81, 141.61) controlPoint2: CGPointMake(100.25, 143.56)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(127.37, 149.4) controlPoint1: CGPointMake(111.81, 147.28) controlPoint2: CGPointMake(119.59, 148.52)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(162.71, 151) controlPoint1: CGPointMake(139.15, 150.65) controlPoint2: CGPointMake(150.93, 151)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(204.05, 148.87) controlPoint1: CGPointMake(176.49, 151) controlPoint2: CGPointMake(190.27, 150.65)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(225.83, 143.73) controlPoint1: CGPointMake(211.6, 147.81) controlPoint2: CGPointMake(218.94, 146.39)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(235.83, 135.93) controlPoint1: CGPointMake(230.05, 141.96) controlPoint2: CGPointMake(234.05, 139.48)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(236.94, 127.78) controlPoint1: CGPointMake(237.39, 133.27) controlPoint2: CGPointMake(236.94, 130.62)];
    [defaultAvatarBezierPath closePath];
    defaultAvatarBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [defaultAvatarBezierPath fill];
}

+ (void)drawVoicemailIcon;
{

    //// voicemailBezier Drawing
    UIBezierPath* voicemailBezierPath = UIBezierPath.bezierPath;
    [voicemailBezierPath moveToPoint: CGPointMake(72.82, 30.15)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(55.52, 48.15) controlPoint1: CGPointMake(63.22, 30.15) controlPoint2: CGPointMake(55.52, 38.55)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(57.32, 56.65) controlPoint1: CGPointMake(55.52, 50.95) controlPoint2: CGPointMake(56.22, 52.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(42.92, 56.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(44.72, 48.15) controlPoint1: CGPointMake(44.12, 52.65) controlPoint2: CGPointMake(44.72, 50.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 30.45) controlPoint1: CGPointMake(44.72, 38.55) controlPoint2: CGPointMake(36.92, 30.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(10.12, 47.65) controlPoint1: CGPointMake(17.92, 30.45) controlPoint2: CGPointMake(10.12, 38.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(28.12, 64.85) controlPoint1: CGPointMake(10.12, 57.25) controlPoint2: CGPointMake(18.52, 64.85)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(29.02, 64.75) controlPoint1: CGPointMake(28.22, 64.85) controlPoint2: CGPointMake(29.02, 64.75)];
    [voicemailBezierPath addLineToPoint: CGPointMake(29.02, 64.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(72.82, 64.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(90.12, 47.45) controlPoint1: CGPointMake(82.42, 64.65) controlPoint2: CGPointMake(90.12, 56.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 30.15) controlPoint1: CGPointMake(90.12, 37.95) controlPoint2: CGPointMake(82.42, 30.15)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(19.92, 47.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 39.95) controlPoint1: CGPointMake(19.92, 43.25) controlPoint2: CGPointMake(23.32, 39.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.92, 47.45) controlPoint1: CGPointMake(31.52, 39.95) controlPoint2: CGPointMake(34.92, 43.35)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.42, 54.95) controlPoint1: CGPointMake(34.92, 51.65) controlPoint2: CGPointMake(31.52, 54.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(19.92, 47.45) controlPoint1: CGPointMake(23.32, 54.95) controlPoint2: CGPointMake(19.92, 51.65)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(72.82, 55.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(65.32, 47.55) controlPoint1: CGPointMake(68.62, 55.05) controlPoint2: CGPointMake(65.32, 51.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 40.05) controlPoint1: CGPointMake(65.32, 43.35) controlPoint2: CGPointMake(68.72, 40.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(80.32, 47.55) controlPoint1: CGPointMake(76.92, 40.05) controlPoint2: CGPointMake(80.32, 43.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(72.82, 55.05) controlPoint1: CGPointMake(80.42, 51.65) controlPoint2: CGPointMake(77.02, 55.05)];
    [voicemailBezierPath closePath];
    voicemailBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [voicemailBezierPath fill];
}

+ (void)drawLogoutIcon;
{

    //// LogoutBezier Drawing
    UIBezierPath* logoutBezierPath = UIBezierPath.bezierPath;
    [logoutBezierPath moveToPoint: CGPointMake(50.37, 90)];
    [logoutBezierPath addCurveToPoint: CGPointMake(14.27, 53.9) controlPoint1: CGPointMake(30.47, 90) controlPoint2: CGPointMake(14.27, 73.8)];
    [logoutBezierPath addCurveToPoint: CGPointMake(26.37, 26.9) controlPoint1: CGPointMake(14.27, 43.6) controlPoint2: CGPointMake(18.67, 33.8)];
    [logoutBezierPath addCurveToPoint: CGPointMake(33.67, 27.3) controlPoint1: CGPointMake(28.47, 25) controlPoint2: CGPointMake(31.77, 25.2)];
    [logoutBezierPath addCurveToPoint: CGPointMake(33.27, 34.6) controlPoint1: CGPointMake(35.57, 29.4) controlPoint2: CGPointMake(35.37, 32.7)];
    [logoutBezierPath addCurveToPoint: CGPointMake(24.57, 53.9) controlPoint1: CGPointMake(27.77, 39.5) controlPoint2: CGPointMake(24.57, 46.5)];
    [logoutBezierPath addCurveToPoint: CGPointMake(50.37, 79.7) controlPoint1: CGPointMake(24.57, 68.1) controlPoint2: CGPointMake(36.17, 79.7)];
    [logoutBezierPath addCurveToPoint: CGPointMake(76.17, 53.9) controlPoint1: CGPointMake(64.57, 79.7) controlPoint2: CGPointMake(76.17, 68.1)];
    [logoutBezierPath addCurveToPoint: CGPointMake(67.57, 34.6) controlPoint1: CGPointMake(76.17, 46.5) controlPoint2: CGPointMake(72.97, 39.5)];
    [logoutBezierPath addCurveToPoint: CGPointMake(67.17, 27.3) controlPoint1: CGPointMake(65.47, 32.7) controlPoint2: CGPointMake(65.27, 29.5)];
    [logoutBezierPath addCurveToPoint: CGPointMake(74.47, 26.9) controlPoint1: CGPointMake(69.07, 25.2) controlPoint2: CGPointMake(72.37, 25)];
    [logoutBezierPath addCurveToPoint: CGPointMake(86.57, 53.9) controlPoint1: CGPointMake(82.17, 33.7) controlPoint2: CGPointMake(86.57, 43.6)];
    [logoutBezierPath addCurveToPoint: CGPointMake(50.37, 90) controlPoint1: CGPointMake(86.37, 73.8) controlPoint2: CGPointMake(70.17, 90)];
    [logoutBezierPath closePath];
    [logoutBezierPath moveToPoint: CGPointMake(55.47, 43.6)];
    [logoutBezierPath addLineToPoint: CGPointMake(55.47, 17.8)];
    [logoutBezierPath addCurveToPoint: CGPointMake(50.27, 12.6) controlPoint1: CGPointMake(55.47, 15) controlPoint2: CGPointMake(53.17, 12.6)];
    [logoutBezierPath addCurveToPoint: CGPointMake(45.07, 17.8) controlPoint1: CGPointMake(47.37, 12.6) controlPoint2: CGPointMake(45.07, 14.9)];
    [logoutBezierPath addLineToPoint: CGPointMake(45.07, 43.6)];
    [logoutBezierPath addCurveToPoint: CGPointMake(50.27, 48.8) controlPoint1: CGPointMake(45.07, 46.4) controlPoint2: CGPointMake(47.37, 48.8)];
    [logoutBezierPath addCurveToPoint: CGPointMake(55.47, 43.6) controlPoint1: CGPointMake(53.17, 48.8) controlPoint2: CGPointMake(55.47, 46.4)];
    [logoutBezierPath closePath];
    logoutBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [logoutBezierPath fill];
    [JCStyleKit.loginColor setStroke];
    logoutBezierPath.lineWidth = 0;
    [logoutBezierPath stroke];
}

#pragma mark Generated Images

+ (UIImage*)imageOfMoreLogin;
{
    if (_imageOfMoreLogin)
        return _imageOfMoreLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawMoreLogin];
    _imageOfMoreLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMoreLogin;
}

+ (UIImage*)imageOfDefaultAvatarLogin;
{
    if (_imageOfDefaultAvatarLogin)
        return _imageOfDefaultAvatarLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawDefaultAvatarLogin];
    _imageOfDefaultAvatarLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDefaultAvatarLogin;
}

+ (UIImage*)imageOfVoicemailLogin;
{
    if (_imageOfVoicemailLogin)
        return _imageOfVoicemailLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawVoicemailLogin];
    _imageOfVoicemailLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfVoicemailLogin;
}

+ (UIImage*)imageOfSpeakerButtonWithSpeakerFrame: (CGRect)speakerFrame speakerIsSelected: (BOOL)speakerIsSelected;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(195, 70), NO, 0.0f);
    [JCStyleKit drawSpeakerButtonWithSpeakerFrame: speakerFrame speakerIsSelected: speakerIsSelected];
    UIImage* imageOfSpeakerButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfSpeakerButton;
}

+ (UIImage*)imageOfContactsIcon;
{
    if (_imageOfContactsIcon)
        return _imageOfContactsIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawContactsIcon];
    _imageOfContactsIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfContactsIcon;
}

+ (UIImage*)imageOfTrashButtonWithOuterFrame: (CGRect)outerFrame selectWithDeleteColor: (BOOL)selectWithDeleteColor;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(82, 70), NO, 0.0f);
    [JCStyleKit drawTrashButtonWithOuterFrame: outerFrame selectWithDeleteColor: selectWithDeleteColor];
    UIImage* imageOfTrashButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfTrashButton;
}

+ (UIImage*)imageOfBack_buttonWithBack_ButtonFrame: (CGRect)back_ButtonFrame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawBack_buttonWithBack_ButtonFrame: back_ButtonFrame];
    UIImage* imageOfBack_button = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBack_button;
}

+ (UIImage*)imageOfCanvas6WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas6WithFrame: frame];
    UIImage* imageOfCanvas6 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas6;
}

+ (UIImage*)imageOfMessageIcon;
{
    if (_imageOfMessageIcon)
        return _imageOfMessageIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawMessageIcon];
    _imageOfMessageIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMessageIcon;
}

+ (UIImage*)imageOfMoreIcon;
{
    if (_imageOfMoreIcon)
        return _imageOfMoreIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawMoreIcon];
    _imageOfMoreIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMoreIcon;
}

+ (UIImage*)imageOfCanvas9WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas9WithFrame: frame];
    UIImage* imageOfCanvas9 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas9;
}

+ (UIImage*)imageOfSearchIcon;
{
    if (_imageOfSearchIcon)
        return _imageOfSearchIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawSearchIcon];
    _imageOfSearchIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfSearchIcon;
}

+ (UIImage*)imageOfStarIcon;
{
    if (_imageOfStarIcon)
        return _imageOfStarIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawStarIcon];
    _imageOfStarIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfStarIcon;
}

+ (UIImage*)imageOfCanvas12WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas12WithFrame: frame];
    UIImage* imageOfCanvas12 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas12;
}

+ (UIImage*)imageOfTypingIcon;
{
    if (_imageOfTypingIcon)
        return _imageOfTypingIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawTypingIcon];
    _imageOfTypingIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTypingIcon;
}

+ (UIImage*)imageOfUndoIcon;
{
    if (_imageOfUndoIcon)
        return _imageOfUndoIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawUndoIcon];
    _imageOfUndoIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfUndoIcon;
}

+ (UIImage*)imageOfDefaultAvatarIcon;
{
    if (_imageOfDefaultAvatarIcon)
        return _imageOfDefaultAvatarIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 166), NO, 0.0f);
    [JCStyleKit drawDefaultAvatarIcon];
    _imageOfDefaultAvatarIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDefaultAvatarIcon;
}

+ (UIImage*)imageOfVoicemailIcon;
{
    if (_imageOfVoicemailIcon)
        return _imageOfVoicemailIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawVoicemailIcon];
    _imageOfVoicemailIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfVoicemailIcon;
}

+ (UIImage*)imageOfLogoutIcon;
{
    if (_imageOfLogoutIcon)
        return _imageOfLogoutIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawLogoutIcon];
    _imageOfLogoutIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLogoutIcon;
}

#pragma mark Customization Infrastructure

- (void)setMoreLoginTargets: (NSArray*)moreLoginTargets
{
    _moreLoginTargets = moreLoginTargets;

    for (id target in self.moreLoginTargets)
        [target setImage: JCStyleKit.imageOfMoreLogin];
}

- (void)setDefaultAvatarLoginTargets: (NSArray*)defaultAvatarLoginTargets
{
    _defaultAvatarLoginTargets = defaultAvatarLoginTargets;

    for (id target in self.defaultAvatarLoginTargets)
        [target setImage: JCStyleKit.imageOfDefaultAvatarLogin];
}

- (void)setVoicemailLoginTargets: (NSArray*)voicemailLoginTargets
{
    _voicemailLoginTargets = voicemailLoginTargets;

    for (id target in self.voicemailLoginTargets)
        [target setImage: JCStyleKit.imageOfVoicemailLogin];
}

- (void)setContactsIconTargets: (NSArray*)contactsIconTargets
{
    _contactsIconTargets = contactsIconTargets;

    for (id target in self.contactsIconTargets)
        [target setImage: JCStyleKit.imageOfContactsIcon];
}

- (void)setMessageIconTargets: (NSArray*)messageIconTargets
{
    _messageIconTargets = messageIconTargets;

    for (id target in self.messageIconTargets)
        [target setImage: JCStyleKit.imageOfMessageIcon];
}

- (void)setMoreIconTargets: (NSArray*)moreIconTargets
{
    _moreIconTargets = moreIconTargets;

    for (id target in self.moreIconTargets)
        [target setImage: JCStyleKit.imageOfMoreIcon];
}

- (void)setSearchIconTargets: (NSArray*)searchIconTargets
{
    _searchIconTargets = searchIconTargets;

    for (id target in self.searchIconTargets)
        [target setImage: JCStyleKit.imageOfSearchIcon];
}

- (void)setStarIconTargets: (NSArray*)starIconTargets
{
    _starIconTargets = starIconTargets;

    for (id target in self.starIconTargets)
        [target setImage: JCStyleKit.imageOfStarIcon];
}

- (void)setTypingIconTargets: (NSArray*)typingIconTargets
{
    _typingIconTargets = typingIconTargets;

    for (id target in self.typingIconTargets)
        [target setImage: JCStyleKit.imageOfTypingIcon];
}

- (void)setUndoIconTargets: (NSArray*)undoIconTargets
{
    _undoIconTargets = undoIconTargets;

    for (id target in self.undoIconTargets)
        [target setImage: JCStyleKit.imageOfUndoIcon];
}

- (void)setDefaultAvatarIconTargets: (NSArray*)defaultAvatarIconTargets
{
    _defaultAvatarIconTargets = defaultAvatarIconTargets;

    for (id target in self.defaultAvatarIconTargets)
        [target setImage: JCStyleKit.imageOfDefaultAvatarIcon];
}

- (void)setVoicemailIconTargets: (NSArray*)voicemailIconTargets
{
    _voicemailIconTargets = voicemailIconTargets;

    for (id target in self.voicemailIconTargets)
        [target setImage: JCStyleKit.imageOfVoicemailIcon];
}

- (void)setLogoutIconTargets: (NSArray*)logoutIconTargets
{
    _logoutIconTargets = logoutIconTargets;

    for (id target in self.logoutIconTargets)
        [target setImage: JCStyleKit.imageOfLogoutIcon];
}


@end
