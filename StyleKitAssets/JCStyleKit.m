//
//  JCStyleKit.m
//  JC
//
//  Created by Doug Leonard on 7/22/14.
//  Copyright (c) 2014 Jive. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "JCStyleKit.h"


@implementation JCStyleKit

#pragma mark Cache

static UIColor* _unSelectedButtonColor = nil;
static UIColor* _selectedButtonColor = nil;
static UIColor* _deleteColor = nil;
static UIColor* _loginColor = nil;

static UIImage* _imageOfBottomLeft = nil;
static UIImage* _imageOfBottomRight = nil;
static UIImage* _imageOfTopLeft = nil;
static UIImage* _imageOfTopRight = nil;
static UIImage* _imageOfMoreLogin = nil;
static UIImage* _imageOfDefaultAvatarLogin = nil;
static UIImage* _imageOfVoicemailLogin = nil;
static UIImage* _imageOfPlayLogin = nil;
static UIImage* _imageOfSpeakerLogin = nil;
static UIImage* _imageOfTrashLogin = nil;
static UIImage* _imageOfScrubberLogin = nil;
static UIImage* _imageOfVoicemailCell = nil;
static UIImage* _imageOfVoicemailIcon = nil;
static UIImage* _imageOfContactsIcon = nil;
static UIImage* _imageOfMessageIcon = nil;
static UIImage* _imageOfMoreIcon = nil;
static UIImage* _imageOfDefaultAvatarIcon = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _unSelectedButtonColor = [UIColor colorWithRed: 0.282 green: 0.298 blue: 0.333 alpha: 1];
    _selectedButtonColor = [UIColor colorWithRed: 0.275 green: 0.396 blue: 0.843 alpha: 1];
    _deleteColor = [UIColor colorWithRed: 0.949 green: 0.302 blue: 0.216 alpha: 1];
    _loginColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)unSelectedButtonColor { return _unSelectedButtonColor; }
+ (UIColor*)selectedButtonColor { return _selectedButtonColor; }
+ (UIColor*)deleteColor { return _deleteColor; }
+ (UIColor*)loginColor { return _loginColor; }

#pragma mark Drawing Methods

+ (void)drawLeaveFeedback_ButtonWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.772 green: 0.772 blue: 0.772 alpha: 1];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.06406) + 0.5, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.10000) + 0.5, floor(CGRectGetWidth(frame) * 0.93594) - floor(CGRectGetWidth(frame) * 0.06406), floor(CGRectGetHeight(frame) * 0.90000) - floor(CGRectGetHeight(frame) * 0.10000)) cornerRadius: 1];
    [JCStyleKit.loginColor setFill];
    [rectanglePath fill];
    [color setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];


    //// Back_Button Drawing
    UIBezierPath* back_ButtonPath = UIBezierPath.bezierPath;
    [back_ButtonPath moveToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.16, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.34, CGRectGetMinY(frame) + 27.7)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 45.15, CGRectGetMinY(frame) + 29.35)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 50, CGRectGetMinY(frame) + 33.79)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 47.07, CGRectGetMinY(frame) + 34)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 41.99, CGRectGetMinY(frame) + 29.35)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 40.18, CGRectGetMinY(frame) + 27.7)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 40, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 46.98, CGRectGetMinY(frame) + 21)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 49.95, CGRectGetMinY(frame) + 21.2)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.16, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath closePath];
    back_ButtonPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [back_ButtonPath fill];


    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 143) * 0.22599 + 0.5), CGRectGetMinY(frame) + floor((CGRectGetHeight(frame) - 21) * 0.50000 + 0.5), 143, 21);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue-Light" size: UIFont.labelFontSize], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Leave Feedback" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawBottomLeft;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// Bezier 3 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 16.65, 54.67);
    CGContextRotateCTM(context, -26.55 * M_PI / 180);

    UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
    [bezier3Path moveToPoint: CGPointMake(30.5, -42.5)];
    [bezier3Path addCurveToPoint: CGPointMake(-36.5, 42.5) controlPoint1: CGPointMake(18.5, 19.5) controlPoint2: CGPointMake(-20.5, 35.5)];
    [bezier3Path moveToPoint: CGPointMake(12.5, -23.5)];
    [bezier3Path addLineToPoint: CGPointMake(30.5, -42.5)];
    [bezier3Path addLineToPoint: CGPointMake(36.5, -16.5)];
    bezier3Path.lineCapStyle = kCGLineCapRound;

    bezier3Path.lineJoinStyle = kCGLineJoinRound;

    [black setStroke];
    bezier3Path.lineWidth = 4;
    [bezier3Path stroke];

    CGContextRestoreGState(context);
}

+ (void)drawBottomRight;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 13, 31);
        CGContextRotateCTM(context, -7.4 * M_PI / 180);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(-5.2, -28)];
        [bezierPath addCurveToPoint: CGPointMake(2, 33) controlPoint1: CGPointMake(4, 6.86) controlPoint2: CGPointMake(2, 15.57)];
        [bezierPath moveToPoint: CGPointMake(9, -8.39)];
        [bezierPath addLineToPoint: CGPointMake(-5.2, -28)];
        [bezierPath addLineToPoint: CGPointMake(-9, -5.12)];
        bezierPath.lineCapStyle = kCGLineCapRound;

        bezierPath.lineJoinStyle = kCGLineJoinRound;

        [black setStroke];
        bezierPath.lineWidth = 4;
        [bezierPath stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawTopLeft;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 27.5, 21);
        CGContextRotateCTM(context, -9.55 * M_PI / 180);



        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(-13.5, 52)];
        [bezier3Path addCurveToPoint: CGPointMake(0.31, -18.06) controlPoint1: CGPointMake(-19.5, 32) controlPoint2: CGPointMake(-14.47, -1.13)];
        [bezier3Path moveToPoint: CGPointMake(-27.5, 33)];
        [bezier3Path addLineToPoint: CGPointMake(-13.5, 53)];
        [bezier3Path addLineToPoint: CGPointMake(-4.5, 29)];
        bezier3Path.lineCapStyle = kCGLineCapRound;

        bezier3Path.lineJoinStyle = kCGLineJoinRound;

        [black setStroke];
        bezier3Path.lineWidth = 4;
        [bezier3Path stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawTopRight;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 58.06, 58.16);
    CGContextRotateCTM(context, -3.46 * M_PI / 180);

    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(-56, 74.58)];
    [bezierPath addCurveToPoint: CGPointMake(57, -52.5) controlPoint1: CGPointMake(-37, 60.06) controlPoint2: CGPointMake(42.46, 42.48)];
    [bezierPath moveToPoint: CGPointMake(-26.47, 72.38)];
    [bezierPath addLineToPoint: CGPointMake(-57, 74.58)];
    [bezierPath addLineToPoint: CGPointMake(-38.24, 51.63)];
    bezierPath.lineCapStyle = kCGLineCapRound;

    bezierPath.lineJoinStyle = kCGLineJoinRound;

    [black setStroke];
    bezierPath.lineWidth = 4;
    [bezierPath stroke];

    CGContextRestoreGState(context);
}

+ (void)drawMoreLogin;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(27.29, 42.79)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 57.07) controlPoint1: CGPointMake(31.24, 46.73) controlPoint2: CGPointMake(31.24, 53.13)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 57.07) controlPoint1: CGPointMake(23.35, 61.02) controlPoint2: CGPointMake(16.95, 61.02)];
        [bezierPath addCurveToPoint: CGPointMake(13.01, 42.79) controlPoint1: CGPointMake(9.06, 53.13) controlPoint2: CGPointMake(9.06, 46.73)];
        [bezierPath addCurveToPoint: CGPointMake(27.29, 42.79) controlPoint1: CGPointMake(16.95, 38.84) controlPoint2: CGPointMake(23.35, 38.84)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(57.09, 42.89)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 57.17) controlPoint1: CGPointMake(61.04, 46.83) controlPoint2: CGPointMake(61.04, 53.23)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 57.17) controlPoint1: CGPointMake(53.15, 61.12) controlPoint2: CGPointMake(46.75, 61.12)];
        [bezier2Path addCurveToPoint: CGPointMake(42.81, 42.89) controlPoint1: CGPointMake(38.86, 53.23) controlPoint2: CGPointMake(38.86, 46.83)];
        [bezier2Path addCurveToPoint: CGPointMake(57.09, 42.89) controlPoint1: CGPointMake(46.75, 38.94) controlPoint2: CGPointMake(53.15, 38.94)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(86.99, 42.79)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 57.07) controlPoint1: CGPointMake(90.94, 46.73) controlPoint2: CGPointMake(90.94, 53.13)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 57.07) controlPoint1: CGPointMake(83.05, 61.02) controlPoint2: CGPointMake(76.65, 61.02)];
        [bezier3Path addCurveToPoint: CGPointMake(72.71, 42.79) controlPoint1: CGPointMake(68.76, 53.13) controlPoint2: CGPointMake(68.76, 46.73)];
        [bezier3Path addCurveToPoint: CGPointMake(86.99, 42.79) controlPoint1: CGPointMake(76.65, 38.84) controlPoint2: CGPointMake(83.05, 38.84)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.loginColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawDefaultAvatarLogin;
{

    //// defaultAvatarBezier Drawing
    UIBezierPath* defaultAvatarBezierPath = UIBezierPath.bezierPath;
    [defaultAvatarBezierPath moveToPoint: CGPointMake(83.35, 75.21)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(80.95, 69.61) controlPoint1: CGPointMake(83.45, 73.11) controlPoint2: CGPointMake(82.25, 71.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(73.55, 63.81) controlPoint1: CGPointMake(78.85, 67.21) controlPoint2: CGPointMake(76.25, 65.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(61.25, 58.41) controlPoint1: CGPointMake(69.65, 61.61) controlPoint2: CGPointMake(65.55, 59.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.85, 57.01) controlPoint1: CGPointMake(60.55, 58.21) controlPoint2: CGPointMake(60.25, 57.61)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.05, 50.61) controlPoint1: CGPointMake(58.75, 55.11) controlPoint2: CGPointMake(58.55, 52.71)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(59.55, 49.21) controlPoint1: CGPointMake(59.15, 50.11) controlPoint2: CGPointMake(59.25, 49.61)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(68.15, 32.21) controlPoint1: CGPointMake(63.95, 44.51) controlPoint2: CGPointMake(67.05, 38.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(66.95, 19.91) controlPoint1: CGPointMake(68.85, 28.11) controlPoint2: CGPointMake(68.55, 23.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(60.65, 12.21) controlPoint1: CGPointMake(65.65, 16.81) controlPoint2: CGPointMake(63.45, 14.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(47.85, 9.51) controlPoint1: CGPointMake(56.95, 9.81) controlPoint2: CGPointMake(52.35, 8.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(40.15, 12.31) controlPoint1: CGPointMake(45.15, 9.81) controlPoint2: CGPointMake(42.45, 10.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(33.95, 20.01) controlPoint1: CGPointMake(37.35, 14.11) controlPoint2: CGPointMake(35.25, 16.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(33.05, 33.51) controlPoint1: CGPointMake(32.25, 24.31) controlPoint2: CGPointMake(32.15, 29.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(41.25, 49.41) controlPoint1: CGPointMake(34.25, 39.41) controlPoint2: CGPointMake(37.15, 45.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(39.55, 58.01) controlPoint1: CGPointMake(42.55, 52.21) controlPoint2: CGPointMake(41.85, 55.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(38.05, 58.71) controlPoint1: CGPointMake(39.15, 58.41) controlPoint2: CGPointMake(38.55, 58.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(26.25, 64.41) controlPoint1: CGPointMake(33.95, 60.21) controlPoint2: CGPointMake(29.95, 62.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(19.85, 69.51) controlPoint1: CGPointMake(23.95, 65.81) controlPoint2: CGPointMake(21.75, 67.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(17.55, 73.41) controlPoint1: CGPointMake(18.85, 70.61) controlPoint2: CGPointMake(17.95, 71.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(17.25, 77.21) controlPoint1: CGPointMake(17.15, 74.61) controlPoint2: CGPointMake(17.35, 76.01)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(18.55, 81.31) controlPoint1: CGPointMake(17.15, 78.71) controlPoint2: CGPointMake(17.65, 80.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(23.75, 84.91) controlPoint1: CGPointMake(19.85, 83.01) controlPoint2: CGPointMake(21.85, 84.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(34.05, 87.41) controlPoint1: CGPointMake(27.05, 86.21) controlPoint2: CGPointMake(30.55, 86.91)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(49.95, 88.31) controlPoint1: CGPointMake(39.35, 88.11) controlPoint2: CGPointMake(44.65, 88.31)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(68.55, 87.11) controlPoint1: CGPointMake(56.15, 88.31) controlPoint2: CGPointMake(62.35, 88.11)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(78.35, 84.21) controlPoint1: CGPointMake(71.95, 86.51) controlPoint2: CGPointMake(75.25, 85.71)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(82.85, 79.81) controlPoint1: CGPointMake(80.25, 83.21) controlPoint2: CGPointMake(82.05, 81.81)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(83.35, 75.21) controlPoint1: CGPointMake(83.55, 78.31) controlPoint2: CGPointMake(83.35, 76.81)];
    [defaultAvatarBezierPath closePath];
    defaultAvatarBezierPath.miterLimit = 4;

    [JCStyleKit.loginColor setFill];
    [defaultAvatarBezierPath fill];
}

+ (void)drawVoicemailLogin;
{

    //// voicemailBezier Drawing
    UIBezierPath* voicemailBezierPath = UIBezierPath.bezierPath;
    [voicemailBezierPath moveToPoint: CGPointMake(62.82, 0.15)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(45.52, 18.15) controlPoint1: CGPointMake(53.22, 0.15) controlPoint2: CGPointMake(45.52, 8.55)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(47.32, 26.65) controlPoint1: CGPointMake(45.52, 20.95) controlPoint2: CGPointMake(46.22, 22.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(32.92, 26.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.72, 18.15) controlPoint1: CGPointMake(34.12, 22.65) controlPoint2: CGPointMake(34.72, 20.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(17.42, 0.45) controlPoint1: CGPointMake(34.72, 8.55) controlPoint2: CGPointMake(26.92, 0.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(0.12, 17.65) controlPoint1: CGPointMake(7.92, 0.45) controlPoint2: CGPointMake(0.12, 8.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(18.12, 34.85) controlPoint1: CGPointMake(0.12, 27.25) controlPoint2: CGPointMake(8.52, 34.85)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(19.02, 34.75) controlPoint1: CGPointMake(18.22, 34.85) controlPoint2: CGPointMake(19.02, 34.75)];
    [voicemailBezierPath addLineToPoint: CGPointMake(19.02, 34.65)];
    [voicemailBezierPath addLineToPoint: CGPointMake(62.82, 34.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(80.12, 17.45) controlPoint1: CGPointMake(72.42, 34.65) controlPoint2: CGPointMake(80.12, 26.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(62.82, 0.15) controlPoint1: CGPointMake(80.12, 7.95) controlPoint2: CGPointMake(72.42, 0.15)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(9.92, 17.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(17.42, 9.95) controlPoint1: CGPointMake(9.92, 13.25) controlPoint2: CGPointMake(13.32, 9.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(24.92, 17.45) controlPoint1: CGPointMake(21.52, 9.95) controlPoint2: CGPointMake(24.92, 13.35)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(17.42, 24.95) controlPoint1: CGPointMake(24.92, 21.65) controlPoint2: CGPointMake(21.52, 24.95)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(9.92, 17.45) controlPoint1: CGPointMake(13.32, 24.95) controlPoint2: CGPointMake(9.92, 21.65)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(62.82, 25.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(55.32, 17.55) controlPoint1: CGPointMake(58.62, 25.05) controlPoint2: CGPointMake(55.32, 21.65)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(62.82, 10.05) controlPoint1: CGPointMake(55.32, 13.35) controlPoint2: CGPointMake(58.72, 10.05)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(70.32, 17.55) controlPoint1: CGPointMake(66.92, 10.05) controlPoint2: CGPointMake(70.32, 13.45)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(62.82, 25.05) controlPoint1: CGPointMake(70.42, 21.65) controlPoint2: CGPointMake(67.02, 25.05)];
    [voicemailBezierPath closePath];
    voicemailBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [voicemailBezierPath fill];
}

+ (void)drawPlayLogin;
{
}

+ (void)drawSpeakerLogin;
{
}

+ (void)drawTrashLogin;
{
}

+ (void)drawScrubberLogin;
{
}

+ (void)drawVoicemailCell;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* white = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    UIColor* color = [UIColor colorWithRed: 0.772 green: 0.772 blue: 0.772 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Shadow Declarations
    UIColor* shadow1 = [UIColor.grayColor colorWithAlphaComponent: 0.5];
    CGSize shadow1Offset = CGSizeMake(2.1, 2.1);
    CGFloat shadow1BlurRadius = 5;

    //// Rectangle Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 2, -1);
    CGContextScaleCTM(context, 0.8, 0.8);

    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 458.75, 203.75)];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, shadow1Offset, shadow1BlurRadius, [shadow1 CGColor]);
    [gradientColor setFill];
    [rectanglePath fill];
    CGContextRestoreGState(context);

    [gradientColor setStroke];
    rectanglePath.lineWidth = 1.5;
    [rectanglePath stroke];

    CGContextRestoreGState(context);


    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(13, -6, 138, 48)];
    [white setFill];
    [rectangle2Path fill];


    //// Text Drawing
    CGRect textRect = CGRectMake(16, 6, 118, 38);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 21], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Troy Shields" drawInRect: textRect withAttributes: textFontAttributes];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(53, 90.05)];
    [bezier2Path addLineToPoint: CGPointMake(21.25, 106.1)];
    [bezier2Path addLineToPoint: CGPointMake(21.25, 74)];
    [bezier2Path addLineToPoint: CGPointMake(53, 90.05)];
    [bezier2Path closePath];
    bezier2Path.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezier2Path fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(69, 90)];
    [bezierPath addLineToPoint: CGPointMake(327, 90)];
    [UIColor.lightGrayColor setStroke];
    bezierPath.lineWidth = 2.5;
    [bezierPath stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68, 87, 6, 6)];
    [JCStyleKit.selectedButtonColor setFill];
    [ovalPath fill];


    //// Group
    {
        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(86.3, 64.03)];
        [bezier3Path addCurveToPoint: CGPointMake(78.47, 71.66) controlPoint1: CGPointMake(86.3, 68.22) controlPoint2: CGPointMake(82.77, 71.66)];
        [bezier3Path addLineToPoint: CGPointMake(74.91, 71.66)];
        [bezier3Path addLineToPoint: CGPointMake(70.57, 80.51)];
        [bezier3Path addLineToPoint: CGPointMake(66.23, 71.66)];
        [bezier3Path addLineToPoint: CGPointMake(62.82, 71.66)];
        [bezier3Path addCurveToPoint: CGPointMake(55, 64.03) controlPoint1: CGPointMake(58.52, 71.66) controlPoint2: CGPointMake(55, 68.22)];
        [bezier3Path addLineToPoint: CGPointMake(55, 64.03)];
        [bezier3Path addCurveToPoint: CGPointMake(62.82, 56.4) controlPoint1: CGPointMake(55, 59.83) controlPoint2: CGPointMake(58.52, 56.4)];
        [bezier3Path addLineToPoint: CGPointMake(78.47, 56.4)];
        [bezier3Path addCurveToPoint: CGPointMake(86.3, 64.03) controlPoint1: CGPointMake(82.77, 56.4) controlPoint2: CGPointMake(86.3, 59.83)];
        [bezier3Path addLineToPoint: CGPointMake(86.3, 64.03)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.selectedButtonColor setFill];
        [bezier3Path fill];


        //// Text 2 Drawing
        CGRect text2Rect = CGRectMake(58, 58, 25, 14);
        NSMutableParagraphStyle* text2Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        text2Style.alignment = NSTextAlignmentCenter;

        NSDictionary* text2FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue-Bold" size: 9.5], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text2Style};

        [@"0:00" drawInRect: text2Rect withAttributes: text2FontAttributes];
    }


    //// Group 2
    {
        //// Rectangle 3 Drawing
        UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRect: CGRectMake(252, 105, 58, 51)];
        [color setStroke];
        rectangle3Path.lineWidth = 1;
        [rectangle3Path stroke];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(289.5, 125.68)];
        [bezier4Path addLineToPoint: CGPointMake(270.65, 125.68)];
        [bezier4Path addCurveToPoint: CGPointMake(269.71, 126.53) controlPoint1: CGPointMake(270.15, 125.68) controlPoint2: CGPointMake(269.71, 126.07)];
        [bezier4Path addLineToPoint: CGPointMake(271.02, 143.71)];
        [bezier4Path addCurveToPoint: CGPointMake(271.96, 144.63) controlPoint1: CGPointMake(271.02, 144.17) controlPoint2: CGPointMake(271.42, 144.63)];
        [bezier4Path addLineToPoint: CGPointMake(288.05, 144.63)];
        [bezier4Path addCurveToPoint: CGPointMake(289, 143.71) controlPoint1: CGPointMake(288.56, 144.63) controlPoint2: CGPointMake(289, 144.17)];
        [bezier4Path addLineToPoint: CGPointMake(290.48, 126.56)];
        [bezier4Path addCurveToPoint: CGPointMake(289.5, 125.68) controlPoint1: CGPointMake(290.41, 126.1) controlPoint2: CGPointMake(290.01, 125.68)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier4Path fill];


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = UIBezierPath.bezierPath;
        [bezier5Path moveToPoint: CGPointMake(291.24, 121.1)];
        [bezier5Path addLineToPoint: CGPointMake(291.35, 121.1)];
        [bezier5Path addCurveToPoint: CGPointMake(285.73, 120.91) controlPoint1: CGPointMake(291.35, 121.1) controlPoint2: CGPointMake(289.36, 121.1)];
        [bezier5Path addLineToPoint: CGPointMake(284.36, 118.49)];
        [bezier5Path addLineToPoint: CGPointMake(275.66, 118.49)];
        [bezier5Path addLineToPoint: CGPointMake(274.42, 121.04)];
        [bezier5Path addCurveToPoint: CGPointMake(269.13, 121.46) controlPoint1: CGPointMake(271.27, 121.23) controlPoint2: CGPointMake(269.46, 121.4)];
        [bezier5Path addLineToPoint: CGPointMake(268.99, 121.43)];
        [bezier5Path addCurveToPoint: CGPointMake(268.12, 122.21) controlPoint1: CGPointMake(268.48, 121.43) controlPoint2: CGPointMake(268.12, 121.76)];
        [bezier5Path addLineToPoint: CGPointMake(268.12, 122.64)];
        [bezier5Path addCurveToPoint: CGPointMake(268.95, 123.72) controlPoint1: CGPointMake(268.12, 123.1) controlPoint2: CGPointMake(268.44, 123.72)];
        [bezier5Path addLineToPoint: CGPointMake(291.24, 123.72)];
        [bezier5Path addCurveToPoint: CGPointMake(292.04, 122.64) controlPoint1: CGPointMake(291.75, 123.72) controlPoint2: CGPointMake(292.04, 123.1)];
        [bezier5Path addLineToPoint: CGPointMake(292.04, 122.21)];
        [bezier5Path addCurveToPoint: CGPointMake(291.24, 121.1) controlPoint1: CGPointMake(292.04, 121.76) controlPoint2: CGPointMake(291.75, 121.1)];
        [bezier5Path closePath];
        bezier5Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier5Path fill];
    }


    //// SpeakerGroup
    {
        //// Rectangle 4 Drawing
        UIBezierPath* rectangle4Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(113, 104, 133, 52) cornerRadius: 1];
        [color setStroke];
        rectangle4Path.lineWidth = 1;
        [rectangle4Path stroke];


        //// SpeakerBezier Drawing
        UIBezierPath* speakerBezierPath = UIBezierPath.bezierPath;
        [speakerBezierPath moveToPoint: CGPointMake(164.9, 124.42)];
        [speakerBezierPath addLineToPoint: CGPointMake(170.99, 124.42)];
        [speakerBezierPath addLineToPoint: CGPointMake(180.14, 116.93)];
        [speakerBezierPath addLineToPoint: CGPointMake(180.14, 142.26)];
        [speakerBezierPath addLineToPoint: CGPointMake(170.99, 133.34)];
        [speakerBezierPath addLineToPoint: CGPointMake(164.9, 133.34)];
        [speakerBezierPath addCurveToPoint: CGPointMake(161.85, 130.34) controlPoint1: CGPointMake(163.18, 133.34) controlPoint2: CGPointMake(161.85, 132.06)];
        [speakerBezierPath addLineToPoint: CGPointMake(161.85, 127.35)];
        [speakerBezierPath addCurveToPoint: CGPointMake(164.9, 124.42) controlPoint1: CGPointMake(161.85, 125.78) controlPoint2: CGPointMake(163.26, 124.42)];
        [speakerBezierPath addLineToPoint: CGPointMake(164.9, 124.42)];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(193.81, 128.92)];
        [speakerBezierPath addCurveToPoint: CGPointMake(189.9, 136.98) controlPoint1: CGPointMake(193.81, 132.2) controlPoint2: CGPointMake(192.25, 135.05)];
        [speakerBezierPath addLineToPoint: CGPointMake(187.72, 134.84)];
        [speakerBezierPath addCurveToPoint: CGPointMake(190.76, 128.85) controlPoint1: CGPointMake(189.59, 133.48) controlPoint2: CGPointMake(190.76, 131.34)];
        [speakerBezierPath addCurveToPoint: CGPointMake(187.72, 122.85) controlPoint1: CGPointMake(190.76, 126.35) controlPoint2: CGPointMake(189.59, 124.21)];
        [speakerBezierPath addLineToPoint: CGPointMake(189.9, 120.71)];
        [speakerBezierPath addCurveToPoint: CGPointMake(193.81, 128.92) controlPoint1: CGPointMake(192.33, 122.71) controlPoint2: CGPointMake(193.81, 125.64)];
        [speakerBezierPath addLineToPoint: CGPointMake(193.81, 128.92)];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(187.72, 128.92)];
        [speakerBezierPath addCurveToPoint: CGPointMake(184.59, 133.2) controlPoint1: CGPointMake(187.72, 130.91) controlPoint2: CGPointMake(186.39, 132.63)];
        [speakerBezierPath addLineToPoint: CGPointMake(183.18, 130.42)];
        [speakerBezierPath addCurveToPoint: CGPointMake(184.75, 128.92) controlPoint1: CGPointMake(184.04, 130.42) controlPoint2: CGPointMake(184.75, 129.77)];
        [speakerBezierPath addCurveToPoint: CGPointMake(183.18, 127.42) controlPoint1: CGPointMake(184.75, 128.13) controlPoint2: CGPointMake(184.04, 127.42)];
        [speakerBezierPath addLineToPoint: CGPointMake(184.59, 124.64)];
        [speakerBezierPath addCurveToPoint: CGPointMake(187.72, 128.92) controlPoint1: CGPointMake(186.47, 125.21) controlPoint2: CGPointMake(187.72, 126.92)];
        [speakerBezierPath addLineToPoint: CGPointMake(187.72, 128.92)];
        [speakerBezierPath closePath];
        speakerBezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [speakerBezierPath fill];
    }


    //// Text 3 Drawing
    CGRect text3Rect = CGRectMake(318, 17, 55, 29);
    NSMutableParagraphStyle* text3Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text3Style.alignment = NSTextAlignmentCenter;

    NSDictionary* text3FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 16], NSForegroundColorAttributeName: color3, NSParagraphStyleAttributeName: text3Style};

    [@"7121" drawInRect: text3Rect withAttributes: text3FontAttributes];


    //// Text 4 Drawing
    CGRect text4Rect = CGRectMake(311, 0, 55, 29);
    NSMutableParagraphStyle* text4Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text4Style.alignment = NSTextAlignmentCenter;

    NSDictionary* text4FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 16], NSForegroundColorAttributeName: color3, NSParagraphStyleAttributeName: text4Style};

    [@"Jan 16" drawInRect: text4Rect withAttributes: text4FontAttributes];
}

+ (void)drawSpeakerButtonWithSpeakerFrame: (CGRect)speakerFrame speakerIsSelected: (BOOL)speakerIsSelected;
{

    //// Variable Declarations
    UIColor* expression = speakerIsSelected ? JCStyleKit.selectedButtonColor : JCStyleKit.unSelectedButtonColor;


    //// Subframes
    CGRect innerFrame = CGRectMake(CGRectGetMinX(speakerFrame) + floor(CGRectGetWidth(speakerFrame) * 0.37949 + 0.5), CGRectGetMinY(speakerFrame) + floor(CGRectGetHeight(speakerFrame) * 0.21429 + 0.5), floor(CGRectGetWidth(speakerFrame) * 0.62051 + 0.5) - floor(CGRectGetWidth(speakerFrame) * 0.37949 + 0.5), floor(CGRectGetHeight(speakerFrame) * 0.77143 + 0.5) - floor(CGRectGetHeight(speakerFrame) * 0.21429 + 0.5));
    CGRect speakerGroup = CGRectMake(CGRectGetMinX(innerFrame) + 0.75, CGRectGetMinY(innerFrame) + floor(CGRectGetHeight(innerFrame) * 0.02564) + 0.5, floor((CGRectGetWidth(innerFrame) - 0.75) * 0.99243 + 0.6) - 0.1, floor(CGRectGetHeight(innerFrame) * 0.98718 - 0.5) - floor(CGRectGetHeight(innerFrame) * 0.02564) + 0.5);


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(speakerFrame) + 2, CGRectGetMinY(speakerFrame) + 2, floor((CGRectGetWidth(speakerFrame) - 2) * 0.98964 + 0.5), floor((CGRectGetHeight(speakerFrame) - 2) * 0.97059 + 0.5)) cornerRadius: 1];
    [expression setStroke];
    rectanglePath.lineWidth = 0.5;
    [rectanglePath stroke];


    //// SpeakerGroup
    {
        //// SpeakerBezier Drawing
        UIBezierPath* speakerBezierPath = UIBezierPath.bezierPath;
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.28606 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.57213 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.00000 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.57213 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 1.00000 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.28606 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.52958 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.04156 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64789 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.59718 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41127 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.34930 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.04401 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.09535 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.29577 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.87775 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.79155 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.60282 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.95110 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.71549 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.70704 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47042 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.86797 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.65352 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.56901 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.23380 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.90465 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.37183 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.86797 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.28732 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.87775 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.14930 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.95355 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.22817 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.34366 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 1.00000 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        [speakerBezierPath moveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71149 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.64225 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.55211 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.76773 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.61972 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.66748 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.53239 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.69438 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.53239 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.50704 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.66748 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41408 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71638 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.44225 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.69438 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.41408 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.71149 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.30423 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup)) controlPoint1: CGPointMake(CGRectGetMinX(speakerGroup) + 0.77017 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.32676 * CGRectGetHeight(speakerGroup)) controlPoint2: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.39437 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(speakerGroup) + 0.80929 * CGRectGetWidth(speakerGroup), CGRectGetMinY(speakerGroup) + 0.47324 * CGRectGetHeight(speakerGroup))];
        [speakerBezierPath closePath];
        speakerBezierPath.miterLimit = 4;

        [expression setFill];
        [speakerBezierPath fill];
    }
}

+ (void)drawComposeIconWithFrame: (CGRect)frame;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.3, CGRectGetMinY(frame) + 24.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 24.9, CGRectGetMinY(frame) + 26.9) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.6, CGRectGetMinY(frame) + 24.4)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 68.7, CGRectGetMinY(frame) + 24.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 45.7, CGRectGetMinY(frame) + 24.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 57.2, CGRectGetMinY(frame) + 24.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 59.4, CGRectGetMinY(frame) + 33.9) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.6, CGRectGetMinY(frame) + 27.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 62.5, CGRectGetMinY(frame) + 30.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 58.7, CGRectGetMinY(frame) + 34) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 59.2, CGRectGetMinY(frame) + 34.1) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 58.9, CGRectGetMinY(frame) + 34)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.6, CGRectGetMinY(frame) + 34) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 50.7, CGRectGetMinY(frame) + 34) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 42.6, CGRectGetMinY(frame) + 34)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 32.1, CGRectGetMinY(frame) + 34.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 33.7, CGRectGetMinY(frame) + 34) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 32.8, CGRectGetMinY(frame) + 34.1)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 38.9) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 30.5, CGRectGetMinY(frame) + 35.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 37)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 86.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 54.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 70.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34, CGRectGetMinY(frame) + 90.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 29.4, CGRectGetMinY(frame) + 88.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 31.6, CGRectGetMinY(frame) + 90.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.4, CGRectGetMinY(frame) + 90.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 49.8, CGRectGetMinY(frame) + 90.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 65.6, CGRectGetMinY(frame) + 90.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 86.2) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 83.8, CGRectGetMinY(frame) + 90.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 88.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 61.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 77.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 69.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 86.4, CGRectGetMinY(frame) + 60.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 85.9, CGRectGetMinY(frame) + 60.8) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 86.2, CGRectGetMinY(frame) + 60.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 51.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 89.4, CGRectGetMinY(frame) + 57.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 92.4, CGRectGetMinY(frame) + 54.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 83.5) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 62.2) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 72.8)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.1, CGRectGetMinY(frame) + 89) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 95.4, CGRectGetMinY(frame) + 85.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 95.5, CGRectGetMinY(frame) + 87.2)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 89.6, CGRectGetMinY(frame) + 97.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 94.4, CGRectGetMinY(frame) + 92.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 92.4, CGRectGetMinY(frame) + 95.6)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.2, CGRectGetMinY(frame) + 100.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 87.2, CGRectGetMinY(frame) + 99.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 84.2, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 34.9, CGRectGetMinY(frame) + 100.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.8, CGRectGetMinY(frame) + 100.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 50.4, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 31.6, CGRectGetMinY(frame) + 100.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 33.8, CGRectGetMinY(frame) + 100.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 32.7, CGRectGetMinY(frame) + 100.3)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.8, CGRectGetMinY(frame) + 94.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 28.1, CGRectGetMinY(frame) + 99.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 24.9, CGRectGetMinY(frame) + 97.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 86) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 20.9, CGRectGetMinY(frame) + 92) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 89)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 38.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 70.3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.9, CGRectGetMinY(frame) + 54.5)];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.8, CGRectGetMinY(frame) + 36) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 20.7, CGRectGetMinY(frame) + 33.1)];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 22.3, CGRectGetMinY(frame) + 30.8)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 92.1, CGRectGetMinY(frame) + 20.2) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 86, CGRectGetMinY(frame) + 20.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 89.1, CGRectGetMinY(frame) + 19.7)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 98.2, CGRectGetMinY(frame) + 24.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 94.6, CGRectGetMinY(frame) + 20.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 96.8, CGRectGetMinY(frame) + 22.1)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 98.6, CGRectGetMinY(frame) + 34.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 100.2, CGRectGetMinY(frame) + 27) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 100.4, CGRectGetMinY(frame) + 31)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 95.6, CGRectGetMinY(frame) + 37.6) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 97.9, CGRectGetMinY(frame) + 35.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 96.6, CGRectGetMinY(frame) + 36.5)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 90.1, CGRectGetMinY(frame) + 43.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 93.8, CGRectGetMinY(frame) + 39.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 91.9, CGRectGetMinY(frame) + 41.3)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.6, CGRectGetMinY(frame) + 30) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 85.6, CGRectGetMinY(frame) + 38.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.1, CGRectGetMinY(frame) + 34.3)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 78.9, CGRectGetMinY(frame) + 27.6) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.4, CGRectGetMinY(frame) + 25.1)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 83.9, CGRectGetMinY(frame) + 22.7)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 72.4, CGRectGetMinY(frame) + 34.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 53.3, CGRectGetMinY(frame) + 53.2) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 62.8, CGRectGetMinY(frame) + 43.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 88.1, CGRectGetMinY(frame) + 45.1) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 76.9, CGRectGetMinY(frame) + 38.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 83.6, CGRectGetMinY(frame) + 40.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 57.7, CGRectGetMinY(frame) + 75.4) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 78.7, CGRectGetMinY(frame) + 54.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 67.1, CGRectGetMinY(frame) + 66.1)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 56.6, CGRectGetMinY(frame) + 76.3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 57.3, CGRectGetMinY(frame) + 75.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 57.1, CGRectGetMinY(frame) + 76.2)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 38.4, CGRectGetMinY(frame) + 81.4) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 50.5, CGRectGetMinY(frame) + 78) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 44.5, CGRectGetMinY(frame) + 79.7)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.2, CGRectGetMinY(frame) + 63.7) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 40, CGRectGetMinY(frame) + 75.5) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 41.6, CGRectGetMinY(frame) + 69.6)];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 43.4, CGRectGetMinY(frame) + 63.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 43.4, CGRectGetMinY(frame) + 63)];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 43.7, CGRectGetMinY(frame) + 62.8)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawVoicemailIcon;
{

    //// voicemailBezier Drawing
    UIBezierPath* voicemailBezierPath = UIBezierPath.bezierPath;
    [voicemailBezierPath moveToPoint: CGPointMake(34.24, 20)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(26.48, 28.22) controlPoint1: CGPointMake(29.93, 20) controlPoint2: CGPointMake(26.48, 23.84)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(27.29, 32.1) controlPoint1: CGPointMake(26.48, 29.5) controlPoint2: CGPointMake(26.79, 30.28)];
    [voicemailBezierPath addLineToPoint: CGPointMake(20.83, 32.1)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(21.64, 28.22) controlPoint1: CGPointMake(21.37, 30.28) controlPoint2: CGPointMake(21.64, 29.5)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(13.88, 20.14) controlPoint1: CGPointMake(21.64, 23.84) controlPoint2: CGPointMake(18.14, 20.14)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(6.12, 27.99) controlPoint1: CGPointMake(9.61, 20.14) controlPoint2: CGPointMake(6.12, 23.61)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(14.19, 35.85) controlPoint1: CGPointMake(6.12, 32.38) controlPoint2: CGPointMake(9.88, 35.85)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(14.59, 35.8) controlPoint1: CGPointMake(14.23, 35.85) controlPoint2: CGPointMake(14.59, 35.8)];
    [voicemailBezierPath addLineToPoint: CGPointMake(14.59, 35.76)];
    [voicemailBezierPath addLineToPoint: CGPointMake(34.24, 35.76)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(42, 27.9) controlPoint1: CGPointMake(38.55, 35.76) controlPoint2: CGPointMake(42, 32.24)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.24, 20) controlPoint1: CGPointMake(42, 23.56) controlPoint2: CGPointMake(38.55, 20)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(10.51, 27.9)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(13.88, 24.48) controlPoint1: CGPointMake(10.51, 25.98) controlPoint2: CGPointMake(12.04, 24.48)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(17.24, 27.9) controlPoint1: CGPointMake(15.71, 24.48) controlPoint2: CGPointMake(17.24, 26.03)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(13.88, 31.33) controlPoint1: CGPointMake(17.24, 29.82) controlPoint2: CGPointMake(15.71, 31.33)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(10.51, 27.9) controlPoint1: CGPointMake(12.04, 31.33) controlPoint2: CGPointMake(10.51, 29.82)];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(34.24, 31.37)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(30.88, 27.95) controlPoint1: CGPointMake(32.36, 31.37) controlPoint2: CGPointMake(30.88, 29.82)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.24, 24.52) controlPoint1: CGPointMake(30.88, 26.03) controlPoint2: CGPointMake(32.4, 24.52)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(37.6, 27.95) controlPoint1: CGPointMake(36.08, 24.52) controlPoint2: CGPointMake(37.6, 26.08)];
    [voicemailBezierPath addCurveToPoint: CGPointMake(34.24, 31.37) controlPoint1: CGPointMake(37.65, 29.82) controlPoint2: CGPointMake(36.12, 31.37)];
    [voicemailBezierPath closePath];
    voicemailBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [voicemailBezierPath fill];
}

+ (void)drawVoicemailIconWhiteWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* white = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// voicemailBezier Drawing
    UIBezierPath* voicemailBezierPath = UIBezierPath.bezierPath;
    [voicemailBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00000 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.55039 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22221 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.64374 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.55039 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10370 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57221 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32715 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.55039 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25678 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.55887 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27777 * CGRectGetHeight(frame))];
    [voicemailBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.39764 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32715 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.41946 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22221 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.41219 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27777 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.41946 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25678 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20973 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00370 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.41946 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10370 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.32490 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00370 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.00000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21604 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.09456 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00370 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.00000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09753 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21822 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42838 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.00000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.33455 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.10183 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42838 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22913 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42714 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.21943 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42838 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.22913 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42714 * CGRectGetHeight(frame))];
    [voicemailBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22913 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42591 * CGRectGetHeight(frame))];
    [voicemailBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42591 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.96985 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21357 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.87650 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.42591 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.96985 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.33085 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.96985 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09629 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.87650 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.00000 * CGRectGetHeight(frame))];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.11881 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21357 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20973 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12098 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.11881 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.16172 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.16002 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12098 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.30065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21357 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.25943 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12098 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.30065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.16296 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20973 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30616 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26542 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.25943 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30616 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.11881 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21357 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.16002 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30616 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.11881 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26542 * CGRectGetHeight(frame))];
    [voicemailBezierPath closePath];
    [voicemailBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30740 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.66920 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21481 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.70920 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30740 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.66920 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26542 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12222 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.66920 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.16296 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.71041 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12222 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.85104 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21481 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.80982 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12222 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.85104 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.16419 * CGRectGetHeight(frame))];
    [voicemailBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76012 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30740 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.85225 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26542 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.81104 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30740 * CGRectGetHeight(frame))];
    [voicemailBezierPath closePath];
    voicemailBezierPath.miterLimit = 4;

    [white setFill];
    [voicemailBezierPath fill];
}

+ (void)drawLogoutIconWithFrame: (CGRect)frame;
{

    //// LogoutBezier Drawing
    UIBezierPath* logoutBezierPath = UIBezierPath.bezierPath;
    [logoutBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49939 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.97000 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.06000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52691 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.25718 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.97000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.06000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77116 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20728 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19552 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.06000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40049 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.11355 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28021 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.29613 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20043 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.23284 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17220 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.27300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17465 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.29126 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.29003 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.31925 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22620 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.31682 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26671 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.18537 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52691 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.22432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35017 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.18537 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.43609 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49939 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84358 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.18537 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70120 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.32656 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84358 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.81342 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52691 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.67223 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84358 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.81342 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70120 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70874 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.29003 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.81342 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.43609 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.77447 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35017 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70387 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20043 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.68318 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26671 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.68075 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22743 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.79272 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19552 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.72700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17465 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.76716 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17220 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.94000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52691 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.88645 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27898 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.94000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40049 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49939 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.97000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.93757 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77116 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.74039 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.97000 * CGRectGetHeight(frame))];
    [logoutBezierPath closePath];
    [logoutBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.56147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40049 * CGRectGetHeight(frame))];
    [logoutBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.56147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.08382 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49817 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.02000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.04946 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.53347 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.02000 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43488 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.08382 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.46288 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.02000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.43488 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.04823 * CGRectGetHeight(frame))];
    [logoutBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43488 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40049 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49817 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46432 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.43488 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.43486 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.46288 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46432 * CGRectGetHeight(frame))];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.56147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40049 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53347 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46432 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.43486 * CGRectGetHeight(frame))];
    [logoutBezierPath closePath];
    logoutBezierPath.miterLimit = 4;

    [UIColor.darkGrayColor setFill];
    [logoutBezierPath fill];
    [UIColor.darkGrayColor setStroke];
    logoutBezierPath.lineWidth = 0;
    [logoutBezierPath stroke];
}

+ (void)drawTOS_ButtonWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.772 green: 0.772 blue: 0.772 alpha: 1];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.06719) + 0.5, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.10000) + 0.5, floor(CGRectGetWidth(frame) * 0.93906) - floor(CGRectGetWidth(frame) * 0.06719), floor(CGRectGetHeight(frame) * 0.90000) - floor(CGRectGetHeight(frame) * 0.10000)) cornerRadius: 1];
    [JCStyleKit.loginColor setFill];
    [rectanglePath fill];
    [color setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];


    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 218) * 0.39216 + 0.5), CGRectGetMinY(frame) + floor((CGRectGetHeight(frame) - 21) * 0.50000 + 0.5), 218, 21);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue-Light" size: UIFont.labelFontSize], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"End User License Agreement" drawInRect: textRect withAttributes: textFontAttributes];


    //// Back_Button Drawing
    UIBezierPath* back_ButtonPath = UIBezierPath.bezierPath;
    [back_ButtonPath moveToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.16, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.34, CGRectGetMinY(frame) + 27.7)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 45.15, CGRectGetMinY(frame) + 29.35)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 50, CGRectGetMinY(frame) + 33.79)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 47.07, CGRectGetMinY(frame) + 34)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 41.99, CGRectGetMinY(frame) + 29.35)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 40.18, CGRectGetMinY(frame) + 27.7)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 40, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 46.98, CGRectGetMinY(frame) + 21)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 49.95, CGRectGetMinY(frame) + 21.2)];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 43.16, CGRectGetMinY(frame) + 27.53)];
    [back_ButtonPath closePath];
    back_ButtonPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [back_ButtonPath fill];
}

+ (void)drawLogOutButtonWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.772 green: 0.772 blue: 0.772 alpha: 1];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.06406) + 0.5, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.10000) + 0.5, floor(CGRectGetWidth(frame) * 0.93594) - floor(CGRectGetWidth(frame) * 0.06406), floor(CGRectGetHeight(frame) * 0.90000) - floor(CGRectGetHeight(frame) * 0.10000)) cornerRadius: 1];
    [JCStyleKit.loginColor setFill];
    [rectanglePath fill];
    [color setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];


    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 202) * 0.33898 + 0.5), CGRectGetMinY(frame) + floor((CGRectGetHeight(frame) - 21) * 0.52941 + 0.5), 202, 21);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue-Light" size: UIFont.labelFontSize], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Log out" drawInRect: textRect withAttributes: textFontAttributes];


    //// LogoutBezier Drawing
    UIBezierPath* logoutBezierPath = UIBezierPath.bezierPath;
    [logoutBezierPath moveToPoint: CGPointMake(CGRectGetMaxX(frame) - 48.01, CGRectGetMinY(frame) + 36)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 56, CGRectGetMinY(frame) + 28.07) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 52.41, CGRectGetMinY(frame) + 36) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 56, CGRectGetMinY(frame) + 32.44)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 53.32, CGRectGetMinY(frame) + 22.14) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 56, CGRectGetMinY(frame) + 25.81) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 55.03, CGRectGetMinY(frame) + 23.66)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 51.71, CGRectGetMinY(frame) + 22.23) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 52.86, CGRectGetMinY(frame) + 21.72) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 52.13, CGRectGetMinY(frame) + 21.77)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 51.8, CGRectGetMinY(frame) + 23.83) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 51.29, CGRectGetMinY(frame) + 22.69) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 51.33, CGRectGetMinY(frame) + 23.41)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 53.72, CGRectGetMinY(frame) + 28.07) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 53.01, CGRectGetMinY(frame) + 24.91) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 53.72, CGRectGetMinY(frame) + 26.45)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 48.01, CGRectGetMinY(frame) + 33.74) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 53.72, CGRectGetMinY(frame) + 31.19) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 51.15, CGRectGetMinY(frame) + 33.74)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 42.3, CGRectGetMinY(frame) + 28.07) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 44.87, CGRectGetMinY(frame) + 33.74) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 42.3, CGRectGetMinY(frame) + 31.19)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 44.2, CGRectGetMinY(frame) + 23.83) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 42.3, CGRectGetMinY(frame) + 26.45) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 43.01, CGRectGetMinY(frame) + 24.91)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 44.29, CGRectGetMinY(frame) + 22.23) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 44.67, CGRectGetMinY(frame) + 23.41) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 44.71, CGRectGetMinY(frame) + 22.71)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 42.68, CGRectGetMinY(frame) + 22.14) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 43.87, CGRectGetMinY(frame) + 21.77) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 43.14, CGRectGetMinY(frame) + 21.72)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 40, CGRectGetMinY(frame) + 28.07) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 40.97, CGRectGetMinY(frame) + 23.63) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 40, CGRectGetMinY(frame) + 25.81)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 48.01, CGRectGetMinY(frame) + 36) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 40.04, CGRectGetMinY(frame) + 32.44) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 43.63, CGRectGetMinY(frame) + 36)];
    [logoutBezierPath closePath];
    [logoutBezierPath moveToPoint: CGPointMake(CGRectGetMaxX(frame) - 46.88, CGRectGetMinY(frame) + 25.81)];
    [logoutBezierPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 46.88, CGRectGetMinY(frame) + 20.14)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 48.03, CGRectGetMinY(frame) + 19) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 46.88, CGRectGetMinY(frame) + 19.53) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 47.39, CGRectGetMinY(frame) + 19)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 49.18, CGRectGetMinY(frame) + 20.14) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 48.67, CGRectGetMinY(frame) + 19) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 49.18, CGRectGetMinY(frame) + 19.51)];
    [logoutBezierPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame) - 49.18, CGRectGetMinY(frame) + 25.81)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 48.03, CGRectGetMinY(frame) + 26.95) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 49.18, CGRectGetMinY(frame) + 26.42) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 48.67, CGRectGetMinY(frame) + 26.95)];
    [logoutBezierPath addCurveToPoint: CGPointMake(CGRectGetMaxX(frame) - 46.88, CGRectGetMinY(frame) + 25.81) controlPoint1: CGPointMake(CGRectGetMaxX(frame) - 47.39, CGRectGetMinY(frame) + 26.95) controlPoint2: CGPointMake(CGRectGetMaxX(frame) - 46.88, CGRectGetMinY(frame) + 26.42)];
    [logoutBezierPath closePath];
    logoutBezierPath.miterLimit = 4;

    [UIColor.darkGrayColor setFill];
    [logoutBezierPath fill];
    [UIColor.darkGrayColor setStroke];
    logoutBezierPath.lineWidth = 0;
    [logoutBezierPath stroke];
}

+ (void)drawContactsIcon;
{
    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];

    //// contactsGroup
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(91.5, 75.7)];
        [bezierPath addCurveToPoint: CGPointMake(88.2, 79) controlPoint1: CGPointMake(91.5, 77.5) controlPoint2: CGPointMake(90, 79)];
        [bezierPath addLineToPoint: CGPointMake(82.8, 79)];
        [bezierPath addCurveToPoint: CGPointMake(79.5, 75.7) controlPoint1: CGPointMake(81, 79) controlPoint2: CGPointMake(79.5, 77.5)];
        [bezierPath addLineToPoint: CGPointMake(79.5, 65.3)];
        [bezierPath addCurveToPoint: CGPointMake(82.8, 62) controlPoint1: CGPointMake(79.5, 63.5) controlPoint2: CGPointMake(81, 62)];
        [bezierPath addLineToPoint: CGPointMake(88.2, 62)];
        [bezierPath addCurveToPoint: CGPointMake(91.5, 65.3) controlPoint1: CGPointMake(90, 62) controlPoint2: CGPointMake(91.5, 63.5)];
        [bezierPath addLineToPoint: CGPointMake(91.5, 75.7)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [black setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(91.5, 54.7)];
        [bezier2Path addCurveToPoint: CGPointMake(88.2, 58) controlPoint1: CGPointMake(91.5, 56.5) controlPoint2: CGPointMake(90, 58)];
        [bezier2Path addLineToPoint: CGPointMake(82.8, 58)];
        [bezier2Path addCurveToPoint: CGPointMake(79.5, 54.7) controlPoint1: CGPointMake(81, 58) controlPoint2: CGPointMake(79.5, 56.5)];
        [bezier2Path addLineToPoint: CGPointMake(79.5, 44.3)];
        [bezier2Path addCurveToPoint: CGPointMake(82.8, 41) controlPoint1: CGPointMake(79.5, 42.5) controlPoint2: CGPointMake(81, 41)];
        [bezier2Path addLineToPoint: CGPointMake(88.2, 41)];
        [bezier2Path addCurveToPoint: CGPointMake(91.5, 44.3) controlPoint1: CGPointMake(90, 41) controlPoint2: CGPointMake(91.5, 42.5)];
        [bezier2Path addLineToPoint: CGPointMake(91.5, 54.7)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [black setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(91.5, 31.7)];
        [bezier3Path addCurveToPoint: CGPointMake(88.2, 35) controlPoint1: CGPointMake(91.5, 33.5) controlPoint2: CGPointMake(90, 35)];
        [bezier3Path addLineToPoint: CGPointMake(82.8, 35)];
        [bezier3Path addCurveToPoint: CGPointMake(79.5, 31.7) controlPoint1: CGPointMake(81, 35) controlPoint2: CGPointMake(79.5, 33.5)];
        [bezier3Path addLineToPoint: CGPointMake(79.5, 21.3)];
        [bezier3Path addCurveToPoint: CGPointMake(82.8, 18) controlPoint1: CGPointMake(79.5, 19.5) controlPoint2: CGPointMake(81, 18)];
        [bezier3Path addLineToPoint: CGPointMake(88.2, 18)];
        [bezier3Path addCurveToPoint: CGPointMake(91.5, 21.3) controlPoint1: CGPointMake(90, 18) controlPoint2: CGPointMake(91.5, 19.5)];
        [bezier3Path addLineToPoint: CGPointMake(91.5, 31.7)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [black setFill];
        [bezier3Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(81.9, 9)];
        [bezier4Path addLineToPoint: CGPointMake(15.8, 9)];
        [bezier4Path addCurveToPoint: CGPointMake(12.5, 12.7) controlPoint1: CGPointMake(13.9, 9) controlPoint2: CGPointMake(12.5, 10.9)];
        [bezier4Path addLineToPoint: CGPointMake(12.5, 86.1)];
        [bezier4Path addCurveToPoint: CGPointMake(16.8, 89) controlPoint1: CGPointMake(12.5, 87.9) controlPoint2: CGPointMake(13.9, 89)];
        [bezier4Path addLineToPoint: CGPointMake(83, 89)];
        [bezier4Path addCurveToPoint: CGPointMake(85.5, 86.1) controlPoint1: CGPointMake(83.8, 89) controlPoint2: CGPointMake(85.5, 87.9)];
        [bezier4Path addLineToPoint: CGPointMake(85.5, 12.7)];
        [bezier4Path addCurveToPoint: CGPointMake(81.9, 9) controlPoint1: CGPointMake(85.5, 10.9) controlPoint2: CGPointMake(83.8, 9)];
        [bezier4Path closePath];
        [bezier4Path moveToPoint: CGPointMake(69.8, 64.5)];
        [bezier4Path addCurveToPoint: CGPointMake(67.6, 66.7) controlPoint1: CGPointMake(69.4, 65.5) controlPoint2: CGPointMake(68.5, 66.2)];
        [bezier4Path addCurveToPoint: CGPointMake(62.7, 68.2) controlPoint1: CGPointMake(66.1, 67.5) controlPoint2: CGPointMake(64.4, 67.9)];
        [bezier4Path addCurveToPoint: CGPointMake(53.4, 68.8) controlPoint1: CGPointMake(59.6, 68.7) controlPoint2: CGPointMake(56.5, 68.8)];
        [bezier4Path addCurveToPoint: CGPointMake(45.5, 68.3) controlPoint1: CGPointMake(50.7, 68.8) controlPoint2: CGPointMake(48.1, 68.7)];
        [bezier4Path addCurveToPoint: CGPointMake(40.4, 67) controlPoint1: CGPointMake(43.8, 68.1) controlPoint2: CGPointMake(42, 67.7)];
        [bezier4Path addCurveToPoint: CGPointMake(37.8, 65.2) controlPoint1: CGPointMake(39.4, 66.6) controlPoint2: CGPointMake(38.5, 66)];
        [bezier4Path addCurveToPoint: CGPointMake(37.2, 63.2) controlPoint1: CGPointMake(37.4, 64.6) controlPoint2: CGPointMake(37.1, 63.9)];
        [bezier4Path addCurveToPoint: CGPointMake(37.3, 61.3) controlPoint1: CGPointMake(37.2, 62.6) controlPoint2: CGPointMake(37.1, 61.9)];
        [bezier4Path addCurveToPoint: CGPointMake(38.5, 59.4) controlPoint1: CGPointMake(37.5, 60.6) controlPoint2: CGPointMake(38, 59.9)];
        [bezier4Path addCurveToPoint: CGPointMake(41.7, 56.9) controlPoint1: CGPointMake(39.4, 58.4) controlPoint2: CGPointMake(40.5, 57.6)];
        [bezier4Path addCurveToPoint: CGPointMake(47.6, 54.1) controlPoint1: CGPointMake(43.6, 55.8) controlPoint2: CGPointMake(45.5, 54.8)];
        [bezier4Path addCurveToPoint: CGPointMake(48.3, 53.8) controlPoint1: CGPointMake(47.8, 54) controlPoint2: CGPointMake(48.1, 53.9)];
        [bezier4Path addCurveToPoint: CGPointMake(49.2, 49.5) controlPoint1: CGPointMake(49.4, 52.7) controlPoint2: CGPointMake(49.8, 50.9)];
        [bezier4Path addCurveToPoint: CGPointMake(45.1, 41.6) controlPoint1: CGPointMake(47.1, 47.3) controlPoint2: CGPointMake(45.7, 44.5)];
        [bezier4Path addCurveToPoint: CGPointMake(45.6, 34.9) controlPoint1: CGPointMake(44.7, 39.4) controlPoint2: CGPointMake(44.7, 37)];
        [bezier4Path addCurveToPoint: CGPointMake(48.7, 31.1) controlPoint1: CGPointMake(46.2, 33.4) controlPoint2: CGPointMake(47.3, 32)];
        [bezier4Path addCurveToPoint: CGPointMake(52.5, 29.7) controlPoint1: CGPointMake(49.8, 30.3) controlPoint2: CGPointMake(51.2, 29.9)];
        [bezier4Path addCurveToPoint: CGPointMake(58.9, 31.1) controlPoint1: CGPointMake(54.7, 29.4) controlPoint2: CGPointMake(57, 29.9)];
        [bezier4Path addCurveToPoint: CGPointMake(62.1, 34.9) controlPoint1: CGPointMake(60.3, 32) controlPoint2: CGPointMake(61.4, 33.4)];
        [bezier4Path addCurveToPoint: CGPointMake(62.7, 41) controlPoint1: CGPointMake(62.9, 36.8) controlPoint2: CGPointMake(63, 39)];
        [bezier4Path addCurveToPoint: CGPointMake(58.4, 49.5) controlPoint1: CGPointMake(62.1, 44.2) controlPoint2: CGPointMake(60.6, 47.1)];
        [bezier4Path addCurveToPoint: CGPointMake(58.2, 50.2) controlPoint1: CGPointMake(58.2, 49.7) controlPoint2: CGPointMake(58.2, 50)];
        [bezier4Path addCurveToPoint: CGPointMake(58.6, 53.4) controlPoint1: CGPointMake(58, 51.3) controlPoint2: CGPointMake(58, 52.4)];
        [bezier4Path addCurveToPoint: CGPointMake(59.3, 54.1) controlPoint1: CGPointMake(58.8, 53.7) controlPoint2: CGPointMake(59, 54)];
        [bezier4Path addCurveToPoint: CGPointMake(65.4, 56.8) controlPoint1: CGPointMake(61.4, 54.8) controlPoint2: CGPointMake(63.5, 55.7)];
        [bezier4Path addCurveToPoint: CGPointMake(69.1, 59.7) controlPoint1: CGPointMake(66.7, 57.6) controlPoint2: CGPointMake(68.1, 58.5)];
        [bezier4Path addCurveToPoint: CGPointMake(70.3, 62.5) controlPoint1: CGPointMake(69.8, 60.5) controlPoint2: CGPointMake(70.3, 61.4)];
        [bezier4Path addCurveToPoint: CGPointMake(69.8, 64.5) controlPoint1: CGPointMake(70, 62.9) controlPoint2: CGPointMake(70.1, 63.7)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier4Path fill];


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = UIBezierPath.bezierPath;
        [bezier5Path moveToPoint: CGPointMake(23.5, 85.7)];
        [bezier5Path addCurveToPoint: CGPointMake(20.2, 89) controlPoint1: CGPointMake(23.5, 87.5) controlPoint2: CGPointMake(22, 89)];
        [bezier5Path addLineToPoint: CGPointMake(15.8, 89)];
        [bezier5Path addCurveToPoint: CGPointMake(12.5, 85.7) controlPoint1: CGPointMake(14, 89) controlPoint2: CGPointMake(12.5, 87.5)];
        [bezier5Path addLineToPoint: CGPointMake(12.5, 12.3)];
        [bezier5Path addCurveToPoint: CGPointMake(15.8, 9) controlPoint1: CGPointMake(12.5, 10.5) controlPoint2: CGPointMake(14, 9)];
        [bezier5Path addLineToPoint: CGPointMake(20.2, 9)];
        [bezier5Path addCurveToPoint: CGPointMake(23.5, 12.3) controlPoint1: CGPointMake(22, 9) controlPoint2: CGPointMake(23.5, 10.5)];
        [bezier5Path addLineToPoint: CGPointMake(23.5, 85.7)];
        [bezier5Path closePath];
        bezier5Path.miterLimit = 4;

        [black setFill];
        [bezier5Path fill];
    }
}

+ (void)drawAddIcon;
{

    //// addBezier Drawing
    UIBezierPath* addBezierPath = UIBezierPath.bezierPath;
    [addBezierPath moveToPoint: CGPointMake(91, 44)];
    [addBezierPath addLineToPoint: CGPointMake(56, 44)];
    [addBezierPath addLineToPoint: CGPointMake(56, 9)];
    [addBezierPath addLineToPoint: CGPointMake(47, 9)];
    [addBezierPath addLineToPoint: CGPointMake(47, 44)];
    [addBezierPath addLineToPoint: CGPointMake(11, 44)];
    [addBezierPath addLineToPoint: CGPointMake(11, 53)];
    [addBezierPath addLineToPoint: CGPointMake(47, 53)];
    [addBezierPath addLineToPoint: CGPointMake(47, 89)];
    [addBezierPath addLineToPoint: CGPointMake(56, 89)];
    [addBezierPath addLineToPoint: CGPointMake(56, 53)];
    [addBezierPath addLineToPoint: CGPointMake(91, 53)];
    [addBezierPath addLineToPoint: CGPointMake(91, 44)];
    [addBezierPath closePath];
    addBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [addBezierPath fill];
}

+ (void)drawTrashButtonWithOuterFrame: (CGRect)outerFrame selectWithDeleteColor: (BOOL)selectWithDeleteColor;
{

    //// Variable Declarations
    UIColor* isSelectWithDeleteColor = selectWithDeleteColor ? JCStyleKit.deleteColor : JCStyleKit.unSelectedButtonColor;


    //// Subframes
    CGRect innerFrame = CGRectMake(CGRectGetMinX(outerFrame) + floor(CGRectGetWidth(outerFrame) * 0.29268 + 0.5), CGRectGetMinY(outerFrame) + floor(CGRectGetHeight(outerFrame) * 0.21429 + 0.5), floor(CGRectGetWidth(outerFrame) * 0.71951 + 0.5) - floor(CGRectGetWidth(outerFrame) * 0.29268 + 0.5), floor(CGRectGetHeight(outerFrame) * 0.77143 + 0.5) - floor(CGRectGetHeight(outerFrame) * 0.21429 + 0.5));
    CGRect group = CGRectMake(CGRectGetMinX(innerFrame) + 1, CGRectGetMinY(innerFrame) + 1, floor((CGRectGetWidth(innerFrame) - 1) * 0.97059 + 0.5), floor((CGRectGetHeight(innerFrame) - 1) * 0.97368 + 0.5));


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(outerFrame) + 2, CGRectGetMinY(outerFrame) + 2, floor((CGRectGetWidth(outerFrame) - 2) * 0.97500 + 0.5), floor((CGRectGetHeight(outerFrame) - 2) * 0.97059 + 0.5)) cornerRadius: 1];
    [isSelectWithDeleteColor setStroke];
    rectanglePath.lineWidth = 0.5;
    [rectanglePath stroke];


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30750 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.08485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16061 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.13788 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83333 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.85455 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30875 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29125 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [isSelectWithDeleteColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.73636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67879 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.26364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09750 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.04242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11375 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11125 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [isSelectWithDeleteColor setFill];
        [bezier2Path fill];
    }
}

+ (void)drawPlay_PauseWithFrame: (CGRect)frame playPauseDisplaysPlay: (BOOL)playPauseDisplaysPlay;
{

    //// Variable Declarations
    BOOL playPauseDisplaysPause = playPauseDisplaysPlay ? NO : YES;


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.31683 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.22321 - 0.5) + 1, floor(CGRectGetWidth(frame) * 0.84158 + 0.5) - floor(CGRectGetWidth(frame) * 0.31683 + 0.5), floor(CGRectGetHeight(frame) * 0.76786 - 0.5) - floor(CGRectGetHeight(frame) * 0.22321 - 0.5));


    if (playPauseDisplaysPlay)
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84011 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49769 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31928 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76873 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31928 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22664 * CGRectGetHeight(frame))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84011 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49769 * CGRectGetHeight(frame))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];
    }


    if (playPauseDisplaysPause)
    {
        //// Group
        {
            //// Rectangle Drawing
            UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.41509 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [JCStyleKit.unSelectedButtonColor setFill];
            [rectanglePath fill];


            //// Rectangle 2 Drawing
            UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.58491 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 1.00000 + 0.5) - floor(CGRectGetWidth(group) * 0.58491 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [JCStyleKit.unSelectedButtonColor setFill];
            [rectangle2Path fill];
        }
    }
}

+ (void)drawCanvas3WithFrame: (CGRect)frame;
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.09922 - 0.42) + 0.92, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.11947 - 0.32) + 0.82, floor(CGRectGetWidth(frame) * 0.89863 - 0.36) - floor(CGRectGetWidth(frame) * 0.09922 - 0.42) - 0.06, floor(CGRectGetHeight(frame) * 0.92182 + 0.45) - floor(CGRectGetHeight(frame) * 0.11947 - 0.32) - 0.76);


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18023 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.06264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08519 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.12143 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05403 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61054 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32283 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05652 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.49421 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17243 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57176 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09516 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53298 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.48545 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49170 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.48795 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18398 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38538 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.28405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15271 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17991 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.17272 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17368 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.16146 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23475 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13269 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18988 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21107 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82302 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43042 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62610 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.17647 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.11893 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85418 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.14645 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76941 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.37412 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57176 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82427 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.79943 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88160 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85418 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51144 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71957 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61613 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.83195 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50396 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82570 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50770 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82945 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50520 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39179 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.86948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46657 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79062 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52515 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65726 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94078 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85916 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94454 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81305 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.94579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83673 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87198 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96635 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93203 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.90154 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94142 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76691 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98878 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.80443 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.18773 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57426 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.38162 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.14645 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99751 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.17397 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.16021 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03637 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93021 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.10267 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99003 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96510 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82177 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01260 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89655 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85916 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23350 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62610 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00009 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + -0.00116 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19860 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01010 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16246 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13380 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.90326 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00168 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82695 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00667 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.86573 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00455 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97956 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05029 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93453 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00667 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96205 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02536 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98457 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00458 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08643 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13629 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94704 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21855 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97581 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19237 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.95955 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20484 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87824 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28709 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92452 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24098 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90075 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26466 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.70936 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12382 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82195 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23226 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76565 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17742 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.73813 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09391 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76941 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06275 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.80068 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03284 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65683 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17492 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41790 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41298 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53674 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29457 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85322 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31202 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.71312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22976 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.79693 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25718 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.47294 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68966 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.73563 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42918 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.59053 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57375 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.45918 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70088 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.46794 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69340 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46544 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69963 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76444 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38287 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72207 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30782 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74325 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29156 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54384 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25153 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69091 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27154 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61737 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.29406 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54010 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29406 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53512 * CGRectGetHeight(group))];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29781 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53262 * CGRectGetHeight(group))];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawEmailIcon;
{

    //// emailGroup
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(11.1, 40.9)];
        [bezier2Path addLineToPoint: CGPointMake(11.1, 77.3)];
        [bezier2Path addLineToPoint: CGPointMake(91.1, 77.3)];
        [bezier2Path addLineToPoint: CGPointMake(91.1, 40.9)];
        [bezier2Path addLineToPoint: CGPointMake(51.1, 59.5)];
        [bezier2Path addLineToPoint: CGPointMake(11.1, 40.9)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(11.1, 23.3)];
        [bezier3Path addLineToPoint: CGPointMake(11.1, 34.5)];
        [bezier3Path addLineToPoint: CGPointMake(51.1, 52.1)];
        [bezier3Path addLineToPoint: CGPointMake(91.1, 34.5)];
        [bezier3Path addLineToPoint: CGPointMake(91.1, 23.3)];
        [bezier3Path addLineToPoint: CGPointMake(11.1, 23.3)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawBack_buttonWithBack_ButtonFrame: (CGRect)back_ButtonFrame;
{

    //// Back_Button Drawing
    UIBezierPath* back_ButtonPath = UIBezierPath.bezierPath;
    [back_ButtonPath moveToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.39800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.40800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.50500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.51100 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.40300 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.78700 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.13000 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.62000 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.11700 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.33100 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.40300 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.22800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.50500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.21800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.61500 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.91700 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.78400 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.90500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath addLineToPoint: CGPointMake(CGRectGetMinX(back_ButtonFrame) + 0.39800 * CGRectGetWidth(back_ButtonFrame), CGRectGetMinY(back_ButtonFrame) + 0.51500 * CGRectGetHeight(back_ButtonFrame))];
    [back_ButtonPath closePath];
    back_ButtonPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [back_ButtonPath fill];
}

+ (void)drawCanvas6WithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.36800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.87500 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.25000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49100 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.48800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86100 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51200 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88800 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.51400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.89000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88900 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.52600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.87500 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53600 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86100 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.77400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49200 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.77500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20800 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.65700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09000 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40400 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.46100 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44600 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40400 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51300 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.41900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.46100 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25800 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawMessageIcon;
{

    //// messagesBezier Drawing
    UIBezierPath* messagesBezierPath = UIBezierPath.bezierPath;
    [messagesBezierPath moveToPoint: CGPointMake(90, 65.43)];
    [messagesBezierPath addCurveToPoint: CGPointMake(81.6, 73.63) controlPoint1: CGPointMake(90, 69.93) controlPoint2: CGPointMake(86.2, 73.63)];
    [messagesBezierPath addLineToPoint: CGPointMake(73.9, 73.63)];
    [messagesBezierPath addLineToPoint: CGPointMake(50.8, 91.73)];
    [messagesBezierPath addLineToPoint: CGPointMake(50.7, 73.23)];
    [messagesBezierPath addLineToPoint: CGPointMake(18.9, 73.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(10, 65.43) controlPoint1: CGPointMake(14.4, 73.23) controlPoint2: CGPointMake(10, 69.93)];
    [messagesBezierPath addLineToPoint: CGPointMake(10, 24.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(18.9, 16.23) controlPoint1: CGPointMake(10, 19.73) controlPoint2: CGPointMake(14.4, 16.23)];
    [messagesBezierPath addLineToPoint: CGPointMake(81.5, 16.23)];
    [messagesBezierPath addCurveToPoint: CGPointMake(90, 24.23) controlPoint1: CGPointMake(86, 16.23) controlPoint2: CGPointMake(90, 19.73)];
    [messagesBezierPath addLineToPoint: CGPointMake(90, 65.43)];
    [messagesBezierPath closePath];
    messagesBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [messagesBezierPath fill];
}

+ (void)drawMoreIcon;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(10.22, 18.89)];
        [bezierPath addCurveToPoint: CGPointMake(10.22, 23.21) controlPoint1: CGPointMake(11.4, 20.08) controlPoint2: CGPointMake(11.4, 22.02)];
        [bezierPath addCurveToPoint: CGPointMake(5.94, 23.21) controlPoint1: CGPointMake(9.04, 24.4) controlPoint2: CGPointMake(7.12, 24.4)];
        [bezierPath addCurveToPoint: CGPointMake(5.94, 18.89) controlPoint1: CGPointMake(4.75, 22.02) controlPoint2: CGPointMake(4.75, 20.08)];
        [bezierPath addCurveToPoint: CGPointMake(10.22, 18.89) controlPoint1: CGPointMake(7.12, 17.7) controlPoint2: CGPointMake(9.04, 17.7)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(19.15, 18.92)];
        [bezier2Path addCurveToPoint: CGPointMake(19.15, 23.24) controlPoint1: CGPointMake(20.33, 20.11) controlPoint2: CGPointMake(20.33, 22.05)];
        [bezier2Path addCurveToPoint: CGPointMake(14.87, 23.24) controlPoint1: CGPointMake(17.97, 24.43) controlPoint2: CGPointMake(16.05, 24.43)];
        [bezier2Path addCurveToPoint: CGPointMake(14.87, 18.92) controlPoint1: CGPointMake(13.69, 22.05) controlPoint2: CGPointMake(13.69, 20.11)];
        [bezier2Path addCurveToPoint: CGPointMake(19.15, 18.92) controlPoint1: CGPointMake(16.05, 17.73) controlPoint2: CGPointMake(17.97, 17.73)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(28.11, 18.89)];
        [bezier3Path addCurveToPoint: CGPointMake(28.11, 23.21) controlPoint1: CGPointMake(29.3, 20.08) controlPoint2: CGPointMake(29.3, 22.02)];
        [bezier3Path addCurveToPoint: CGPointMake(23.83, 23.21) controlPoint1: CGPointMake(26.93, 24.4) controlPoint2: CGPointMake(25.01, 24.4)];
        [bezier3Path addCurveToPoint: CGPointMake(23.83, 18.89) controlPoint1: CGPointMake(22.65, 22.02) controlPoint2: CGPointMake(22.65, 20.08)];
        [bezier3Path addCurveToPoint: CGPointMake(28.11, 18.89) controlPoint1: CGPointMake(25.01, 17.7) controlPoint2: CGPointMake(26.93, 17.7)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier3Path fill];
    }
}

+ (void)drawCanvas9WithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67071 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.83000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62900 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99596 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.32000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.21000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76162 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67071 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.32000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.12000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44848 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.21000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.83000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35758 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44848 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55960 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.selectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawSearchIconWithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 96, CGRectGetMinY(frame) + 86.95)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 93.95, CGRectGetMinY(frame) + 91.84) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 96, CGRectGetMinY(frame) + 88.88) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 95.32, CGRectGetMinY(frame) + 90.47)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 88.95, CGRectGetMinY(frame) + 94) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 92.59, CGRectGetMinY(frame) + 93.32) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 90.88, CGRectGetMinY(frame) + 94)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 84.06, CGRectGetMinY(frame) + 91.95) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 87.01, CGRectGetMinY(frame) + 94) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 85.31, CGRectGetMinY(frame) + 93.32)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 65.29, CGRectGetMinY(frame) + 73.18)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.45, CGRectGetMinY(frame) + 80.01) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 58.8, CGRectGetMinY(frame) + 77.73) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 51.52, CGRectGetMinY(frame) + 80.01)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 28.55, CGRectGetMinY(frame) + 76.94) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 38.21, CGRectGetMinY(frame) + 80.01) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 33.21, CGRectGetMinY(frame) + 78.98)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 16.26, CGRectGetMinY(frame) + 68.75) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 23.77, CGRectGetMinY(frame) + 74.89) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.67, CGRectGetMinY(frame) + 72.16)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 8.07, CGRectGetMinY(frame) + 56.46) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 12.85, CGRectGetMinY(frame) + 65.34) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 10.12, CGRectGetMinY(frame) + 61.24)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 5, CGRectGetMinY(frame) + 41.45) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 6.02, CGRectGetMinY(frame) + 51.69) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 5, CGRectGetMinY(frame) + 46.68)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 8.07, CGRectGetMinY(frame) + 26.55) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 5, CGRectGetMinY(frame) + 36.21) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 6.02, CGRectGetMinY(frame) + 31.21)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 16.26, CGRectGetMinY(frame) + 14.26) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 10.12, CGRectGetMinY(frame) + 21.77) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 12.85, CGRectGetMinY(frame) + 17.67)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 28.55, CGRectGetMinY(frame) + 6.07) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.67, CGRectGetMinY(frame) + 10.85) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 23.77, CGRectGetMinY(frame) + 8.12)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.45, CGRectGetMinY(frame) + 3) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 33.32, CGRectGetMinY(frame) + 4.02) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 38.33, CGRectGetMinY(frame) + 3)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 58.35, CGRectGetMinY(frame) + 6.07) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 48.68, CGRectGetMinY(frame) + 3) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 53.68, CGRectGetMinY(frame) + 4.02)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 70.63, CGRectGetMinY(frame) + 14.26) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 63.01, CGRectGetMinY(frame) + 8.12) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 67.22, CGRectGetMinY(frame) + 10.85)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 78.82, CGRectGetMinY(frame) + 26.55) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 74.05, CGRectGetMinY(frame) + 17.67) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 76.78, CGRectGetMinY(frame) + 21.77)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.89, CGRectGetMinY(frame) + 41.45) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 80.87, CGRectGetMinY(frame) + 31.32) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.89, CGRectGetMinY(frame) + 36.33)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 75.07, CGRectGetMinY(frame) + 63.29) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 81.89, CGRectGetMinY(frame) + 49.52) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 79.62, CGRectGetMinY(frame) + 56.69)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 93.84, CGRectGetMinY(frame) + 82.06)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 96, CGRectGetMinY(frame) + 86.95) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 95.32, CGRectGetMinY(frame) + 83.42) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 96, CGRectGetMinY(frame) + 85.01)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 60.85, CGRectGetMinY(frame) + 58.85)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 68.02, CGRectGetMinY(frame) + 41.56) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.63, CGRectGetMinY(frame) + 54.07) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 68.02, CGRectGetMinY(frame) + 48.27)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 60.85, CGRectGetMinY(frame) + 24.27) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 68.02, CGRectGetMinY(frame) + 34.85) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 65.63, CGRectGetMinY(frame) + 29.05)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.56, CGRectGetMinY(frame) + 17.11) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 56.07, CGRectGetMinY(frame) + 19.49) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 50.27, CGRectGetMinY(frame) + 17.11)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 26.27, CGRectGetMinY(frame) + 24.27) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 36.85, CGRectGetMinY(frame) + 17.11) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 31.05, CGRectGetMinY(frame) + 19.49)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 19.11, CGRectGetMinY(frame) + 41.56) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 21.49, CGRectGetMinY(frame) + 29.05) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 19.11, CGRectGetMinY(frame) + 34.85)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 26.27, CGRectGetMinY(frame) + 58.85) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 19.11, CGRectGetMinY(frame) + 48.27) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 21.49, CGRectGetMinY(frame) + 54.07)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 43.56, CGRectGetMinY(frame) + 66.02) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 31.05, CGRectGetMinY(frame) + 63.63) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 36.85, CGRectGetMinY(frame) + 66.02)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 60.85, CGRectGetMinY(frame) + 58.85) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 50.27, CGRectGetMinY(frame) + 66.02) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 55.96, CGRectGetMinY(frame) + 63.63)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawStarIconWithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.04000 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.65480 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34218 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.99000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.39112 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.74689 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62723 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.80459 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96000 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.80218 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20541 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96000 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26189 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62723 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.02000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.39112 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.35520 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34218 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50500 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.04000 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawCanvas12WithFrame: (CGRect)frame;
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.16000 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.09000 + 0.5), floor(CGRectGetWidth(frame) * 0.82000 + 0.5) - floor(CGRectGetWidth(frame) * 0.16000 + 0.5), floor(CGRectGetHeight(frame) * 0.89000 + 0.5) - floor(CGRectGetHeight(frame) * 0.09000 + 0.5));


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30750 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.08485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.06667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16061 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.12121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.13788 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83333 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.85455 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98250 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.30875 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89394 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29125 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27500 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.73636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97121 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67879 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.26364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09750 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.04242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11375 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13182 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05606 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11125 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.01515 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11250 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.03485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01364 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17625 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14250 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96667 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12500 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98788 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10000 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [JCStyleKit.unSelectedButtonColor setFill];
        [bezier2Path fill];
    }
}

+ (void)drawTypingIconWithFrame: (CGRect)frame;
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.88408 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11000 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15610 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11000 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.04000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17512 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.10270 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11000 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.04000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12371 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.04000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64696 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15610 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.04000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69952 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.10270 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.52648 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.52648 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96000 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.79468 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.88292 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.97000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64696 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.93633 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74978 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.97000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69837 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.97000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17512 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.88408 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11000 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.96884 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.12371 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.93749 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11000 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.28034 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.18745 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.22925 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.18745 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.28034 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.18745 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.22925 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.37322 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.33142 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.37322 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.28034 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.37322 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.33258 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42315 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.46494 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.42315 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.42315 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.46494 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60891 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56712 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60891 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60891 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56712 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73779 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64491 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.68670 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.64491 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73779 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.64491 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.68670 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.83067 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41504 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.78888 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32364 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.83067 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36477 * CGRectGetHeight(frame))];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73779 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.83067 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.46531 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.78888 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50644 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [bezierPath fill];
}

+ (void)drawUndoIconWithFrame: (CGRect)frame;
{

    //// undoBezier Drawing
    UIBezierPath* undoBezierPath = UIBezierPath.bezierPath;
    [undoBezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 47.11, CGRectGetMinY(frame) + 9.43)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 79.04, CGRectGetMinY(frame) + 20.26) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 58.36, CGRectGetMinY(frame) + 8.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 69.86, CGRectGetMinY(frame) + 12.23)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 83.08, CGRectGetMinY(frame) + 82.11) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 97.27, CGRectGetMinY(frame) + 36.21) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 99.11, CGRectGetMinY(frame) + 63.97)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 20.93, CGRectGetMinY(frame) + 86.13) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 67.05, CGRectGetMinY(frame) + 100.25) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 39.16, CGRectGetMinY(frame) + 102.08)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 6, CGRectGetMinY(frame) + 53.14) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 11.02, CGRectGetMinY(frame) + 77.36) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 6, CGRectGetMinY(frame) + 65.31)];
    [undoBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 17.01, CGRectGetMinY(frame) + 53.14)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 17.13, CGRectGetMinY(frame) + 55.33) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 17.01, CGRectGetMinY(frame) + 53.87) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 17.01, CGRectGetMinY(frame) + 54.6)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 28.27, CGRectGetMinY(frame) + 77.85) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 17.75, CGRectGetMinY(frame) + 64.09) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 21.66, CGRectGetMinY(frame) + 72.13)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 52.12, CGRectGetMinY(frame) + 86.01) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 34.87, CGRectGetMinY(frame) + 83.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 43.44, CGRectGetMinY(frame) + 86.5)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 74.76, CGRectGetMinY(frame) + 74.93) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 60.93, CGRectGetMinY(frame) + 85.4) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 69.01, CGRectGetMinY(frame) + 81.5)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 82.96, CGRectGetMinY(frame) + 51.19) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 80.63, CGRectGetMinY(frame) + 68.36) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 83.45, CGRectGetMinY(frame) + 59.83)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 71.82, CGRectGetMinY(frame) + 28.66) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 82.34, CGRectGetMinY(frame) + 42.42) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 78.43, CGRectGetMinY(frame) + 34.39)];
    [undoBezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 47.96, CGRectGetMinY(frame) + 20.51) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 65.22, CGRectGetMinY(frame) + 22.82) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 56.65, CGRectGetMinY(frame) + 20.02)];
    [undoBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 48.45, CGRectGetMinY(frame) + 28.54)];
    [undoBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 24.23, CGRectGetMinY(frame) + 16)];
    [undoBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 46.62, CGRectGetMinY(frame) + 2)];
    [undoBezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 47.11, CGRectGetMinY(frame) + 9.43)];
    [undoBezierPath closePath];
    undoBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [undoBezierPath fill];
}

+ (void)drawDefaultAvatarIcon;
{

    //// defaultAvatarBezier Drawing
    UIBezierPath* defaultAvatarBezierPath = UIBezierPath.bezierPath;
    [defaultAvatarBezierPath moveToPoint: CGPointMake(222.95, 127.78)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(218.38, 117.85) controlPoint1: CGPointMake(223.14, 124.06) controlPoint2: CGPointMake(220.85, 120.51)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(204.28, 107.57) controlPoint1: CGPointMake(214.38, 113.6) controlPoint2: CGPointMake(209.42, 110.41)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(180.85, 98) controlPoint1: CGPointMake(196.85, 103.67) controlPoint2: CGPointMake(189.04, 100.48)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(178.18, 95.52) controlPoint1: CGPointMake(179.51, 97.64) controlPoint2: CGPointMake(178.94, 96.58)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(176.66, 84.17) controlPoint1: CGPointMake(176.08, 92.15) controlPoint2: CGPointMake(175.7, 87.9)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(177.61, 81.69) controlPoint1: CGPointMake(176.85, 83.29) controlPoint2: CGPointMake(177.04, 82.4)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(193.99, 51.56) controlPoint1: CGPointMake(185.99, 73.36) controlPoint2: CGPointMake(191.9, 62.72)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(191.71, 29.75) controlPoint1: CGPointMake(195.33, 44.29) controlPoint2: CGPointMake(194.75, 36.67)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(179.7, 16.11) controlPoint1: CGPointMake(189.23, 24.26) controlPoint2: CGPointMake(185.04, 19.47)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(155.32, 11.32) controlPoint1: CGPointMake(172.66, 11.85) controlPoint2: CGPointMake(163.89, 10.26)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(140.65, 16.28) controlPoint1: CGPointMake(150.18, 11.85) controlPoint2: CGPointMake(145.03, 13.62)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(128.84, 29.93) controlPoint1: CGPointMake(135.32, 19.47) controlPoint2: CGPointMake(131.32, 24.44)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(127.12, 53.86) controlPoint1: CGPointMake(125.6, 37.55) controlPoint2: CGPointMake(125.41, 45.88)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(142.75, 82.05) controlPoint1: CGPointMake(129.41, 64.32) controlPoint2: CGPointMake(134.94, 74.25)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(139.51, 97.29) controlPoint1: CGPointMake(145.22, 87.01) controlPoint2: CGPointMake(143.89, 93.57)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(136.65, 98.53) controlPoint1: CGPointMake(138.75, 98) controlPoint2: CGPointMake(137.6, 98.18)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(114.17, 108.63) controlPoint1: CGPointMake(128.84, 101.19) controlPoint2: CGPointMake(121.22, 104.56)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(101.98, 117.68) controlPoint1: CGPointMake(109.79, 111.12) controlPoint2: CGPointMake(105.6, 113.95)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(97.6, 124.59) controlPoint1: CGPointMake(100.07, 119.62) controlPoint2: CGPointMake(98.36, 121.93)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(97.02, 131.32) controlPoint1: CGPointMake(96.83, 126.72) controlPoint2: CGPointMake(97.21, 129.2)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(99.5, 138.59) controlPoint1: CGPointMake(96.83, 133.98) controlPoint2: CGPointMake(97.79, 136.46)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(109.41, 144.97) controlPoint1: CGPointMake(101.98, 141.61) controlPoint2: CGPointMake(105.79, 143.56)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(129.03, 149.4) controlPoint1: CGPointMake(115.69, 147.28) controlPoint2: CGPointMake(122.36, 148.52)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(159.32, 151) controlPoint1: CGPointMake(139.13, 150.65) controlPoint2: CGPointMake(149.22, 151)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(194.75, 148.87) controlPoint1: CGPointMake(171.13, 151) controlPoint2: CGPointMake(182.94, 150.65)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(213.42, 143.73) controlPoint1: CGPointMake(201.23, 147.81) controlPoint2: CGPointMake(207.52, 146.39)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(222, 135.93) controlPoint1: CGPointMake(217.04, 141.96) controlPoint2: CGPointMake(220.47, 139.48)];
    [defaultAvatarBezierPath addCurveToPoint: CGPointMake(222.95, 127.78) controlPoint1: CGPointMake(223.33, 133.27) controlPoint2: CGPointMake(222.95, 130.62)];
    [defaultAvatarBezierPath closePath];
    defaultAvatarBezierPath.miterLimit = 4;

    [JCStyleKit.unSelectedButtonColor setFill];
    [defaultAvatarBezierPath fill];
}

+ (void)drawPlayPauseTextWithFrame: (CGRect)frame;
{

    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), floor((CGRectGetWidth(frame)) * 1.00806 + 0.5), floor((CGRectGetHeight(frame)) * 1.00000 + 0.5));
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 30], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Play/Pause" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawScrubberTextWithFrame: (CGRect)frame;
{

    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame) + 3, CGRectGetMinY(frame), floor((CGRectGetWidth(frame) - 3) * 0.99635 + 0.5), floor((CGRectGetHeight(frame)) * 1.00000 + 0.5));
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 30], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Span voicemail segments" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawDeleteTextWithFrame: (CGRect)frame;
{

    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), floor((CGRectGetWidth(frame)) * 1.00000 + 0.5), floor((CGRectGetHeight(frame)) * 1.00000 + 0.5));
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 30], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Delete" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawSpeakerTextWithFrame: (CGRect)frame;
{

    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), floor((CGRectGetWidth(frame)) * 1.00000 + 0.5), floor((CGRectGetHeight(frame)) * 1.00000 + 0.5));
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 30], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};

    [@"Speaker On/Off" drawInRect: textRect withAttributes: textFontAttributes];
}

+ (void)drawJiveLogoBlackWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0.151 green: 0.151 blue: 0.151 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), floor((CGRectGetWidth(frame)) * 0.97339 + 0.48) + 0.02, floor((CGRectGetHeight(frame)) * 0.97792 + 0.5));


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99988 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.28423 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95488 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32532 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00192 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29382 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97806 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29861 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.87683 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27362 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92898 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27875 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89489 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.84785 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.30820 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86831 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85978 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14807 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.30991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61471 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38156 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29930 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13750 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30717 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.32601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00457 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.26197 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08603 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27738 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02434 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41231 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03422 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.36025 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00941 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01104 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.40101 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12455 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43080 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06456 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.42669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09864 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39381 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13205 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13886 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57278 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29021 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43132 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85910 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.66822 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76366 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39621 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.87035 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86285 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39347 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86762 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42189 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94125 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41710 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88978 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.42703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91364 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36642 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99920 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41607 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97124 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39484 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98931 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99988 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.36162 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00056 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35580 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99954 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [black setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12284 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99926 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19170 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14670 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16920 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98693 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20022 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99926 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19477 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99173 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19954 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84961 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22169 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94139 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20772 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.89550 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21419 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23022 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22203 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22715 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37474 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27828 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32634 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85509 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38326 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38428 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84756 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38462 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96467 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36417 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89173 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37679 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92803 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37065 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37781 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98077 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36111 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36111 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98145 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42587 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39383 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98043 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40985 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97049 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43950 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98180 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97837 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43814 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45382 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93933 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44428 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44905 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85064 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45859 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.86810 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45518 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.85920 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45586 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84379 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46916 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84756 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45961 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84379 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46541 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.60959 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51586 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84345 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56289 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85543 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61914 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61914 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62084 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97632 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59868 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61198 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.93625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.60516 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59698 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98317 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59766 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99036 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59766 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65015 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61505 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63277 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97289 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68015 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67708 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67640 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82222 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70367 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68731 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69583 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71253 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.80338 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70674 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.78455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70946 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65084 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69072 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67095 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17602 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49268 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33452 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.77872 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15863 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16477 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76742 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16034 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12387 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84790 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14739 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91707 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13546 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12284 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99036 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12353 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99447 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12319 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [black setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57874 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.58456 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53290 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.58079 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55505 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.58250 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54415 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62599 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27350 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.59860 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44632 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61230 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36008 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.63969 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19068 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.63044 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24589 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.63455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21794 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.64791 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18079 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.64038 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18693 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.64449 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18147 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.72325 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16852 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67222 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17602 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.69722 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17261 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.70476 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26089 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.71674 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20022 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.71058 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23056 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67565 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41667 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.69482 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31270 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68592 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36486 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65099 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53631 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66777 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45655 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.65887 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49643 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62805 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65629 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.64312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57619 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.63558 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61641 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61401 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72651 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.62360 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67981 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61914 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70333 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59962 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73980 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.61264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73401 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.60853 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73878 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.55202 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74730 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.58353 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74151 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.56778 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74389 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53764 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73810 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.54312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74900 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53935 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74560 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52429 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67061 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.53319 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71560 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52908 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69310 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50819 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59800 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.51915 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64641 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.51333 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62220 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.48490 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48756 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.50032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56119 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.49278 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52438 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.45991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36929 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44802 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46813 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40883 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.43696 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25953 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.45237 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33281 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.44450 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29634 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42806 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21556 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43388 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24521 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.43114 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23090 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50511 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20363 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.45408 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21147 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47943 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20704 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.51299 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21147 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.50751 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20329 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.51230 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20840 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53079 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31679 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.51915 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24658 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52497 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28169 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.55579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46541 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.53901 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36622 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.54757 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41598 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57086 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55608 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.56093 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49575 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.56572 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52608 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57360 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57154 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55949 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57257 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56255 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57874 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57531 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56562 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group))];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [black setFill];
        [bezier3Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78888 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06267 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72958 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02055 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76946 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.04109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74969 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.10513 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74185 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07500 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73980 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.08869 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74457 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15684 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68560 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13253 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73742 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15616 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71390 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53597 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63584 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58573 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15753 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26873 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44700 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35770 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16814 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25510 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15753 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26055 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15992 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25646 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.22910 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24521 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.18835 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25203 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.20889 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24862 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25714 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24351 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24964 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56324 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35906 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46132 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.66481 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59698 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.24006 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63107 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.09931 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82433 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23800 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74628 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.18355 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81206 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78888 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.06301 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82979 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01952 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81445 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [black setFill];
        [bezier4Path fill];
    }
}

+ (void)drawJiveLogoWhiteWithFrame: (CGRect)frame;
{
    //// Color Declarations
    UIColor* white = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), floor((CGRectGetWidth(frame)) * 0.97339 + 0.48) + 0.02, floor((CGRectGetHeight(frame)) * 0.97792 + 0.5));


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99988 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.28423 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95488 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32532 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00192 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29382 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97806 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29861 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.87683 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27362 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92898 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27875 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89489 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.84785 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.30820 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86831 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85978 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14807 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.30991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61471 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38156 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29930 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12250 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.31026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13750 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30717 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13000 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.32601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00457 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.26197 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08603 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27738 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02434 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41231 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03422 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.36025 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00941 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01104 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.40101 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12455 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43080 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06456 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.42669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09864 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14875 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39381 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13205 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13886 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57278 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29021 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43132 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85910 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.66822 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39073 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76366 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39621 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.87035 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39107 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86285 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39347 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.86762 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42189 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94125 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41710 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88978 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.42703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91364 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36642 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99920 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41607 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97124 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39484 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98931 * CGRectGetHeight(group))];
        [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99988 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.36162 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00056 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35580 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99954 * CGRectGetHeight(group))];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [white setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12284 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99926 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19170 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14670 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16920 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98693 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20022 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99926 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19477 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99173 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19954 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84961 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22169 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94139 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20772 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.89550 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21419 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23022 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22203 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22715 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37474 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27828 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32634 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85509 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38326 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84276 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38428 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84756 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38462 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96467 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36417 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89173 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37679 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92803 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37065 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37781 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98077 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36111 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36111 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98145 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42587 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98111 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39383 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.98043 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40985 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97049 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43950 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98180 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97837 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43814 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.87701 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45382 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93933 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44428 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.90817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44905 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85064 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45859 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.86810 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45518 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.85920 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45586 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84379 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46916 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84756 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45961 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84379 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46541 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.60959 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51586 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84345 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56289 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.85543 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61914 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61914 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.84687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62084 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97632 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59868 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61198 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.93625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.60516 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59698 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.98317 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59766 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99036 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59766 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65015 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61505 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63277 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97289 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68015 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67708 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67640 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82222 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70367 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68731 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.87255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69583 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71253 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.80338 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70674 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.78455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70946 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65084 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69072 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76400 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67095 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17602 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49268 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33452 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.77872 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15863 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.76434 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16477 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.76742 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16034 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.98625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12387 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.84790 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14739 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.91707 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13546 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99995 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12284 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99036 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12353 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99447 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12319 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [white setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57874 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.58456 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53290 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.58079 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55505 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.58250 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54415 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62599 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27350 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.59860 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44632 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61230 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36008 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.63969 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.19068 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.63044 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24589 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.63455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21794 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.64791 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18079 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.64038 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18693 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.64449 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18147 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.72325 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16852 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67222 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17602 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.69722 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17261 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.70476 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26089 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.71674 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20022 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.71058 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23056 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67565 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41667 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.69482 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31270 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68592 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36486 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65099 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53631 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66777 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45655 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.65887 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49643 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62805 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65629 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.64312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57619 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.63558 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61641 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61401 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72651 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.62360 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67981 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61914 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70333 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59962 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73980 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.61264 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73401 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.60853 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73878 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.55202 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74730 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.58353 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74151 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.56778 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74389 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53764 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73810 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.54312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74900 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.53935 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74560 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52429 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67061 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.53319 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71560 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52908 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69310 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50819 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59800 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.51915 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64641 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.51333 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62220 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.48490 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48756 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.50032 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56119 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.49278 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52438 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.45991 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36929 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47669 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44802 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46813 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40883 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.43696 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25953 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.45237 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33281 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.44450 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29634 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42806 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21556 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43388 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24521 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.43114 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23090 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50511 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20363 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.45408 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21147 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47943 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20704 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.51299 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21147 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.50751 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20329 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.51230 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20840 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53079 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31679 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.51915 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24658 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52497 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28169 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.55579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46541 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.53901 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.36622 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.54757 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41598 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57086 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55608 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.56093 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.49575 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.56572 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52608 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57360 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57154 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.55949 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57257 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56255 * CGRectGetHeight(group))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57874 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.57531 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56562 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.57702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56596 * CGRectGetHeight(group))];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [white setFill];
        [bezier3Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78888 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06267 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72958 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02055 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76946 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.04109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74969 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.10513 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74185 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07500 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73980 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.08869 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74457 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15684 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68560 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.13253 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.73742 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15616 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.71390 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53597 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63584 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58573 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.15753 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26873 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44700 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35770 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.16814 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25510 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.15753 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26055 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.15992 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25646 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.22910 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24521 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.18835 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25203 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.20889 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24862 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25714 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24351 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.24964 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56324 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35906 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46132 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.66481 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59698 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.24006 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63107 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.09931 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82433 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.23800 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74628 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.18355 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81206 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78888 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.06301 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82979 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.01952 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.81445 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [white setFill];
        [bezier4Path fill];
    }
}

+ (void)drawGetStartedButtonWithFrame: (CGRect)frame;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* iOSBlue = [UIColor colorWithRed: 0.09 green: 0.529 blue: 0.961 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.09 green: 0.608 blue: 0.961 alpha: 1];

    //// Gradient Declarations
    CGFloat gradientLocations[] = {0, 1};
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor2.CGColor, (id)iOSBlue.CGColor], gradientLocations);

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), 265, 50)];
    [iOSBlue setFill];
    [rectanglePath fill];


    //// Text Drawing
    CGRect textRect = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), 265, 50);
    UIBezierPath* textPath = [UIBezierPath bezierPathWithRect: textRect];
    CGContextSaveGState(context);
    [textPath addClip];
    CGContextDrawLinearGradient(context, gradient,
        CGPointMake(CGRectGetMidX(textRect), CGRectGetMinY(textRect)),
        CGPointMake(CGRectGetMidX(textRect), CGRectGetMaxY(textRect)),
        0);
    CGContextRestoreGState(context);
    {
        NSString* textContent = @"Get Started";
        NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        textStyle.alignment = NSTextAlignmentCenter;

        NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: UIFont.buttonFontSize], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: textStyle};

        [textContent drawInRect: CGRectOffset(textRect, 0, (CGRectGetHeight(textRect) - [textContent boundingRectWithSize: textRect.size options: NSStringDrawingUsesLineFragmentOrigin attributes: textFontAttributes context: nil].size.height) / 2) withAttributes: textFontAttributes];
    }


    //// Cleanup
    CGGradientRelease(gradient);
    CGColorSpaceRelease(colorSpace);
}

#pragma mark Generated Images

+ (UIImage*)imageOfLeaveFeedback_ButtonWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 55), NO, 0.0f);
    [JCStyleKit drawLeaveFeedback_ButtonWithFrame: frame];
    UIImage* imageOfLeaveFeedback_Button = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfLeaveFeedback_Button;
}

+ (UIImage*)imageOfBottomLeft;
{
    if (_imageOfBottomLeft)
        return _imageOfBottomLeft;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 117), NO, 0.0f);
    [JCStyleKit drawBottomLeft];
    _imageOfBottomLeft = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfBottomLeft;
}

+ (UIImage*)imageOfBottomRight;
{
    if (_imageOfBottomRight)
        return _imageOfBottomRight;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(33, 67), NO, 0.0f);
    [JCStyleKit drawBottomRight];
    _imageOfBottomRight = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfBottomRight;
}

+ (UIImage*)imageOfTopLeft;
{
    if (_imageOfTopLeft)
        return _imageOfTopLeft;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(39, 82), NO, 0.0f);
    [JCStyleKit drawTopLeft];
    _imageOfTopLeft = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTopLeft;
}

+ (UIImage*)imageOfTopRight;
{
    if (_imageOfTopRight)
        return _imageOfTopRight;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(117, 145), NO, 0.0f);
    [JCStyleKit drawTopRight];
    _imageOfTopRight = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTopRight;
}

+ (UIImage*)imageOfMoreLogin;
{
    if (_imageOfMoreLogin)
        return _imageOfMoreLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawMoreLogin];
    _imageOfMoreLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMoreLogin;
}

+ (UIImage*)imageOfDefaultAvatarLogin;
{
    if (_imageOfDefaultAvatarLogin)
        return _imageOfDefaultAvatarLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawDefaultAvatarLogin];
    _imageOfDefaultAvatarLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDefaultAvatarLogin;
}

+ (UIImage*)imageOfVoicemailLogin;
{
    if (_imageOfVoicemailLogin)
        return _imageOfVoicemailLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(80, 36), NO, 0.0f);
    [JCStyleKit drawVoicemailLogin];
    _imageOfVoicemailLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfVoicemailLogin;
}

+ (UIImage*)imageOfPlayLogin;
{
    if (_imageOfPlayLogin)
        return _imageOfPlayLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(51, 53), NO, 0.0f);
    [JCStyleKit drawPlayLogin];
    _imageOfPlayLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPlayLogin;
}

+ (UIImage*)imageOfSpeakerLogin;
{
    if (_imageOfSpeakerLogin)
        return _imageOfSpeakerLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 40), NO, 0.0f);
    [JCStyleKit drawSpeakerLogin];
    _imageOfSpeakerLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfSpeakerLogin;
}

+ (UIImage*)imageOfTrashLogin;
{
    if (_imageOfTrashLogin)
        return _imageOfTrashLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(46, 40), NO, 0.0f);
    [JCStyleKit drawTrashLogin];
    _imageOfTrashLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTrashLogin;
}

+ (UIImage*)imageOfScrubberLogin;
{
    if (_imageOfScrubberLogin)
        return _imageOfScrubberLogin;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(216, 34), NO, 0.0f);
    [JCStyleKit drawScrubberLogin];
    _imageOfScrubberLogin = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfScrubberLogin;
}

+ (UIImage*)imageOfVoicemailCell;
{
    if (_imageOfVoicemailCell)
        return _imageOfVoicemailCell;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(372, 166), NO, 0.0f);
    [JCStyleKit drawVoicemailCell];
    _imageOfVoicemailCell = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfVoicemailCell;
}

+ (UIImage*)imageOfSpeakerButtonWithSpeakerFrame: (CGRect)speakerFrame speakerIsSelected: (BOOL)speakerIsSelected;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(195, 70), NO, 0.0f);
    [JCStyleKit drawSpeakerButtonWithSpeakerFrame: speakerFrame speakerIsSelected: speakerIsSelected];
    UIImage* imageOfSpeakerButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfSpeakerButton;
}

+ (UIImage*)imageOfVoicemailIcon;
{
    if (_imageOfVoicemailIcon)
        return _imageOfVoicemailIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [JCStyleKit drawVoicemailIcon];
    _imageOfVoicemailIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfVoicemailIcon;
}

+ (UIImage*)imageOfLogoutIconWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawLogoutIconWithFrame: frame];
    UIImage* imageOfLogoutIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfLogoutIcon;
}

+ (UIImage*)imageOfLogOutButtonWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 55), NO, 0.0f);
    [JCStyleKit drawLogOutButtonWithFrame: frame];
    UIImage* imageOfLogOutButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfLogOutButton;
}

+ (UIImage*)imageOfContactsIcon;
{
    if (_imageOfContactsIcon)
        return _imageOfContactsIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawContactsIcon];
    _imageOfContactsIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfContactsIcon;
}

+ (UIImage*)imageOfTrashButtonWithOuterFrame: (CGRect)outerFrame selectWithDeleteColor: (BOOL)selectWithDeleteColor;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(82, 70), NO, 0.0f);
    [JCStyleKit drawTrashButtonWithOuterFrame: outerFrame selectWithDeleteColor: selectWithDeleteColor];
    UIImage* imageOfTrashButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfTrashButton;
}

+ (UIImage*)imageOfPlay_PauseWithFrame: (CGRect)frame playPauseDisplaysPlay: (BOOL)playPauseDisplaysPlay;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(101, 112), NO, 0.0f);
    [JCStyleKit drawPlay_PauseWithFrame: frame playPauseDisplaysPlay: playPauseDisplaysPlay];
    UIImage* imageOfPlay_Pause = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfPlay_Pause;
}

+ (UIImage*)imageOfBack_buttonWithBack_ButtonFrame: (CGRect)back_ButtonFrame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawBack_buttonWithBack_ButtonFrame: back_ButtonFrame];
    UIImage* imageOfBack_button = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBack_button;
}

+ (UIImage*)imageOfCanvas6WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas6WithFrame: frame];
    UIImage* imageOfCanvas6 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas6;
}

+ (UIImage*)imageOfMessageIcon;
{
    if (_imageOfMessageIcon)
        return _imageOfMessageIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawMessageIcon];
    _imageOfMessageIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMessageIcon;
}

+ (UIImage*)imageOfMoreIcon;
{
    if (_imageOfMoreIcon)
        return _imageOfMoreIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(35, 35), NO, 0.0f);
    [JCStyleKit drawMoreIcon];
    _imageOfMoreIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMoreIcon;
}

+ (UIImage*)imageOfCanvas9WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas9WithFrame: frame];
    UIImage* imageOfCanvas9 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas9;
}

+ (UIImage*)imageOfSearchIconWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawSearchIconWithFrame: frame];
    UIImage* imageOfSearchIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfSearchIcon;
}

+ (UIImage*)imageOfStarIconWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawStarIconWithFrame: frame];
    UIImage* imageOfStarIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfStarIcon;
}

+ (UIImage*)imageOfCanvas12WithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawCanvas12WithFrame: frame];
    UIImage* imageOfCanvas12 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCanvas12;
}

+ (UIImage*)imageOfTypingIconWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawTypingIconWithFrame: frame];
    UIImage* imageOfTypingIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfTypingIcon;
}

+ (UIImage*)imageOfUndoIconWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(100, 100), NO, 0.0f);
    [JCStyleKit drawUndoIconWithFrame: frame];
    UIImage* imageOfUndoIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfUndoIcon;
}

+ (UIImage*)imageOfDefaultAvatarIcon;
{
    if (_imageOfDefaultAvatarIcon)
        return _imageOfDefaultAvatarIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 166), NO, 0.0f);
    [JCStyleKit drawDefaultAvatarIcon];
    _imageOfDefaultAvatarIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDefaultAvatarIcon;
}

+ (UIImage*)imageOfPlayPauseTextWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(125, 39), NO, 0.0f);
    [JCStyleKit drawPlayPauseTextWithFrame: frame];
    UIImage* imageOfPlayPauseText = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfPlayPauseText;
}

+ (UIImage*)imageOfScrubberTextWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(277, 38), NO, 0.0f);
    [JCStyleKit drawScrubberTextWithFrame: frame];
    UIImage* imageOfScrubberText = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfScrubberText;
}

+ (UIImage*)imageOfDeleteTextWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(80, 33), NO, 0.0f);
    [JCStyleKit drawDeleteTextWithFrame: frame];
    UIImage* imageOfDeleteText = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfDeleteText;
}

+ (UIImage*)imageOfSpeakerTextWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(193, 39), NO, 0.0f);
    [JCStyleKit drawSpeakerTextWithFrame: frame];
    UIImage* imageOfSpeakerText = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfSpeakerText;
}

+ (UIImage*)imageOfJiveLogoBlackWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [JCStyleKit drawJiveLogoBlackWithFrame: frame];
    UIImage* imageOfJiveLogoBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfJiveLogoBlack;
}

+ (UIImage*)imageOfJiveLogoWhiteWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [JCStyleKit drawJiveLogoWhiteWithFrame: frame];
    UIImage* imageOfJiveLogoWhite = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfJiveLogoWhite;
}

+ (UIImage*)imageOfGetStartedButtonWithFrame: (CGRect)frame;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(265, 50), NO, 0.0f);
    [JCStyleKit drawGetStartedButtonWithFrame: frame];
    UIImage* imageOfGetStartedButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfGetStartedButton;
}

#pragma mark Customization Infrastructure

- (void)setBottomLeftTargets: (NSArray*)bottomLeftTargets
{
    _bottomLeftTargets = bottomLeftTargets;

    for (id target in self.bottomLeftTargets)
        [target setImage: JCStyleKit.imageOfBottomLeft];
}

- (void)setBottomRightTargets: (NSArray*)bottomRightTargets
{
    _bottomRightTargets = bottomRightTargets;

    for (id target in self.bottomRightTargets)
        [target setImage: JCStyleKit.imageOfBottomRight];
}

- (void)setTopLeftTargets: (NSArray*)topLeftTargets
{
    _topLeftTargets = topLeftTargets;

    for (id target in self.topLeftTargets)
        [target setImage: JCStyleKit.imageOfTopLeft];
}

- (void)setTopRightTargets: (NSArray*)topRightTargets
{
    _topRightTargets = topRightTargets;

    for (id target in self.topRightTargets)
        [target setImage: JCStyleKit.imageOfTopRight];
}

- (void)setMoreLoginTargets: (NSArray*)moreLoginTargets
{
    _moreLoginTargets = moreLoginTargets;

    for (id target in self.moreLoginTargets)
        [target setImage: JCStyleKit.imageOfMoreLogin];
}

- (void)setDefaultAvatarLoginTargets: (NSArray*)defaultAvatarLoginTargets
{
    _defaultAvatarLoginTargets = defaultAvatarLoginTargets;

    for (id target in self.defaultAvatarLoginTargets)
        [target setImage: JCStyleKit.imageOfDefaultAvatarLogin];
}

- (void)setVoicemailLoginTargets: (NSArray*)voicemailLoginTargets
{
    _voicemailLoginTargets = voicemailLoginTargets;

    for (id target in self.voicemailLoginTargets)
        [target setImage: JCStyleKit.imageOfVoicemailLogin];
}

- (void)setPlayLoginTargets: (NSArray*)playLoginTargets
{
    _playLoginTargets = playLoginTargets;

    for (id target in self.playLoginTargets)
        [target setImage: JCStyleKit.imageOfPlayLogin];
}

- (void)setSpeakerLoginTargets: (NSArray*)speakerLoginTargets
{
    _speakerLoginTargets = speakerLoginTargets;

    for (id target in self.speakerLoginTargets)
        [target setImage: JCStyleKit.imageOfSpeakerLogin];
}

- (void)setTrashLoginTargets: (NSArray*)trashLoginTargets
{
    _trashLoginTargets = trashLoginTargets;

    for (id target in self.trashLoginTargets)
        [target setImage: JCStyleKit.imageOfTrashLogin];
}

- (void)setScrubberLoginTargets: (NSArray*)scrubberLoginTargets
{
    _scrubberLoginTargets = scrubberLoginTargets;

    for (id target in self.scrubberLoginTargets)
        [target setImage: JCStyleKit.imageOfScrubberLogin];
}

- (void)setVoicemailCellTargets: (NSArray*)voicemailCellTargets
{
    _voicemailCellTargets = voicemailCellTargets;

    for (id target in self.voicemailCellTargets)
        [target setImage: JCStyleKit.imageOfVoicemailCell];
}

- (void)setVoicemailIconTargets: (NSArray*)voicemailIconTargets
{
    _voicemailIconTargets = voicemailIconTargets;

    for (id target in self.voicemailIconTargets)
        [target setImage: JCStyleKit.imageOfVoicemailIcon];
}

- (void)setContactsIconTargets: (NSArray*)contactsIconTargets
{
    _contactsIconTargets = contactsIconTargets;

    for (id target in self.contactsIconTargets)
        [target setImage: JCStyleKit.imageOfContactsIcon];
}

- (void)setMessageIconTargets: (NSArray*)messageIconTargets
{
    _messageIconTargets = messageIconTargets;

    for (id target in self.messageIconTargets)
        [target setImage: JCStyleKit.imageOfMessageIcon];
}

- (void)setMoreIconTargets: (NSArray*)moreIconTargets
{
    _moreIconTargets = moreIconTargets;

    for (id target in self.moreIconTargets)
        [target setImage: JCStyleKit.imageOfMoreIcon];
}

- (void)setDefaultAvatarIconTargets: (NSArray*)defaultAvatarIconTargets
{
    _defaultAvatarIconTargets = defaultAvatarIconTargets;

    for (id target in self.defaultAvatarIconTargets)
        [target setImage: JCStyleKit.imageOfDefaultAvatarIcon];
}


@end
